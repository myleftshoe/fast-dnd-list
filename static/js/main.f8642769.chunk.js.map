{"version":3,"sources":["events.js","Draggable.js","ElementCache.js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","fireAndForget","target","eventName","Promise","resolve","reject","addEventListener","handler","_ref","removeEventListener","transitions","grasp","moveIntoPlace","settleIntoPlace","Draggable","element","props","startPosition","currentPosition","direction","left","offsetLeft","top","offsetTop","height","offsetHeight","width","offsetWidth","_window$getComputedSt","window","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","initialCenter","dimensions","Math","max","parseInt","displacement","absoluteCenter","this","position","_this$displacement","Object","slicedToArray","x","y","style","transform","concat","willChange","zIndex","transition","classList","add","dragClassName","raised","_element$getBoundingC","getBoundingClientRect","keyframes","animate","duration","easing","onfinish","event","requestAnimationFrame","remove","release","_release","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","stop","_x","_x2","apply","arguments","elementCache","elements","i","length","push","translateY","get","index","count","removeAt","splice","resetStyles","forEach","print","console","table","map","item","innerText","Handler","container","draggable","draggableIndex","placeholderIndex","rafId","isHolding","children","Array","from","ElementCache","_grasp","abrupt","indexOf","setTimeout","undefined","move","prevent","repeatUntilNextTouchMove","_getScrollValue","containerRect","targetRect","bottomOffset","min","bottom","innerHeight","topOffset","maxScrollTop","scrollHeight","clientHeight","offset","scrollTop","getScrollValue","_getScrollValue2","scrollOffset","_draggable","_draggable$absoluteCe","centerY","shift","cancelAnimationFrame","touches","clientX","clientY","_ref2","_ref2$translateY","oldIndex","newIndex","drop","clearTimeout","Sortable","useEffect","containerRef","current","useRef","react_default","createElement","className","ref","onTouchStart","onGrasp","onTouchMove","Drag","onDrag","onTouchEnd","result","onDrop","onContextMenu","react_flip_move_es","typeName","disableAllAnimations","reordering","defaultProps","arr","removeFrom","insertAt","isNaN","Number","_arr","toConsumableArray","generateItems","keys","k","label","checked","Checkbox","type","onChange","stopPropagation","id","ReactDOM","render","_useState","useState","_useState2","items","setItems","_useState3","_useState4","setReordering","toggle","_items","slice","log","find","checkedItems","filter","before","_ref3","after","_ref4","newItems","key","document","getElementById"],"mappings":"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","file":"static/js/main.f8642769.chunk.js","sourcesContent":["export const preventDefault = e => e.preventDefault();\r\n\r\nexport const fireAndForget = (target, eventName) => new Promise((resolve, reject) => {\r\n    const handler = ({ target }) => {\r\n        target.removeEventListener(eventName, handler, false);\r\n        resolve();\r\n    }\r\n    target.addEventListener(eventName, handler, false);\r\n})\r\n","import './Draggable.css';\r\nimport { fireAndForget } from './events';\r\nimport 'web-animations-js/web-animations.min';\r\n\r\nconst transitions = {\r\n    grasp: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out',\r\n    moveIntoPlace: 'transform .2s ease-in-out',\r\n    settleIntoPlace: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out'\r\n}\r\n\r\nexport default function Draggable(element, props) {\r\n\r\n    let startPosition = null;\r\n    let currentPosition = null;\r\n    let direction = null;\r\n\r\n    const { offsetLeft: left, offsetTop: top, offsetHeight: height, offsetWidth: width } = element;\r\n    const { marginTop, marginBottom, marginLeft, marginRight } = window.getComputedStyle(element);\r\n\r\n    const initialCenter = [left + width / 2, top + height / 2];\r\n    const dimensions = {\r\n        width: width + Math.max(parseInt(marginLeft), parseInt(marginRight)),\r\n        height: height + Math.max(parseInt(marginTop), parseInt(marginBottom)),\r\n    }\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get direction() { return direction },\r\n\r\n        get displacement() {\r\n            return [\r\n                currentPosition[0] - startPosition[0],\r\n                currentPosition[1] - startPosition[1],\r\n            ]\r\n        },\r\n\r\n        get dimensions() { return dimensions },\r\n\r\n        get absoluteCenter() {\r\n            return [initialCenter[0] + this.displacement[0], initialCenter[1] + this.displacement[1]];\r\n        },\r\n\r\n        // get absoluteCenter() {\r\n        //     const { left, top, height, width } = element.getBoundingClientRect();\r\n        //     return [left + width / 2, top + height / 2];\r\n        //     // return [element.offsetLeft + this.dimensions.width / 2, element.offsetTop + this.dimensions.height / 2];\r\n        // },\r\n\r\n        set position(position) {\r\n            if (currentPosition) {\r\n                if (position[1] < currentPosition[1])\r\n                    direction = 'up';\r\n                else\r\n                    direction = 'down';\r\n            }\r\n            currentPosition = position;\r\n            if (!startPosition)\r\n                startPosition = currentPosition;\r\n            const [x, y] = this.displacement;\r\n            element.style.transform = `translate(${x}px,${y}px)`;\r\n        },\r\n\r\n        get position() { return currentPosition },\r\n\r\n        grasp() {\r\n            element.style.willChange = 'transform';\r\n            element.style.zIndex = 999;\r\n            // element.style.pointerEvents = 'none';\r\n            element.style.position = 'relative';\r\n            element.style.transition = transitions.grasp;\r\n            element.classList.add(props.dragClassName);\r\n            props.raised && element.classList.add('shadow');\r\n        },\r\n\r\n        moveIntoPlace(x, y) {\r\n            return new Promise(resolve => {\r\n                const { left, top } = element.getBoundingClientRect();\r\n                const keyframes = [\r\n                    { transform: `translate(${left - x}px,${top - y}px)` },\r\n                    { transform: `translate(${0}px,${0}px)` },\r\n                ];\r\n                const animation = element.animate(keyframes, {\r\n                    duration: 200,\r\n                    easing: 'ease-in-out',\r\n                });\r\n                animation.onfinish = () => {\r\n                    element.style.transition = null;\r\n                    element.style.transform = `translate(${0}px,${0}px)`;\r\n                    resolve();\r\n                }\r\n            });\r\n            // Not supported in Chrome yet: (polyfill available but above Promise is simpler)\r\n            // return animation.finished;\r\n        },\r\n\r\n        settleIntoPlace() {\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.classList.remove(props.dragClassName);\r\n                element.classList.remove('shadow');\r\n                element.style.transition = transitions.settleIntoPlace;\r\n            });\r\n            return event;\r\n        },\r\n\r\n        async release(x, y) {\r\n            await this.moveIntoPlace(x, y);\r\n            await this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n        }\r\n    }\r\n}\r\n","export default function elementCache(elements) {\r\n\r\n    const elementCache = [];\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        elementCache.push({ element, top: element.offsetTop, height: element.offsetHeight, translateY: 0 });\r\n    }\r\n\r\n    return {\r\n\r\n        get: index => elementCache[index],\r\n\r\n        get count() { return elementCache.length },\r\n\r\n        removeAt(index) { elementCache.splice(index, 1) },\r\n\r\n        resetStyles() {\r\n            elementCache.forEach(({ element }) => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n        },\r\n\r\n        print() {\r\n            console.table(elementCache.map(element => {\r\n                const { element: { innerText: item }, top, translateY } = element;\r\n                return { item, top, translateY }\r\n            }));\r\n        }\r\n    }\r\n\r\n}","import Draggable from './Draggable';\r\nimport ElementCache from './ElementCache';\r\nimport { preventDefault } from './events';\r\n\r\nexport default function (container, props) {\r\n\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    const children = Array.from(container.children);\r\n    let elementCache = new ElementCache(children);\r\n    let rafId;\r\n    let isHolding;\r\n\r\n    return {\r\n\r\n        async grasp(e) {\r\n\r\n            if (e.target === container || draggable) return;\r\n\r\n            draggable = new Draggable(e.target, props);\r\n\r\n            draggableIndex = children.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elementCache.removeAt(draggableIndex);\r\n\r\n            isHolding = setTimeout(() => {\r\n                isHolding = undefined;\r\n                disableScrolling();\r\n                draggable.grasp();\r\n            }, 300);\r\n\r\n        },\r\n\r\n        move(e) {\r\n\r\n            if (prevent()) return;\r\n\r\n            rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            const [x, y] = [e.touches[0].clientX, e.touches[0].clientY];\r\n\r\n            // Allows auto scroll to continue when draggable is held in same place\r\n            function repeatUntilNextTouchMove() {\r\n\r\n                const [scrollTop, scrollOffset] = getScrollValue();\r\n                container.scrollTop = scrollTop;\r\n                draggable.position = [x, y + scrollTop];\r\n\r\n                const { direction, dimensions: { height }, absoluteCenter: [, centerY] } = draggable;\r\n\r\n                if (direction === 'down') {\r\n                    for (placeholderIndex; placeholderIndex < elementCache.count; placeholderIndex++) {\r\n                        const element = elementCache.get(placeholderIndex);\r\n                        if (element.top > centerY) break;\r\n                        element.top -= height;\r\n                        element.translateY -= height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n                else if (direction === 'up') {\r\n                    for (placeholderIndex; placeholderIndex > 0; placeholderIndex--) {\r\n                        const element = elementCache.get(placeholderIndex - 1);\r\n                        const bottom = element.top + element.height;\r\n                        if (bottom < centerY) break;\r\n                        element.top += height;\r\n                        element.translateY += height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n\r\n                if (placeholderIndex <= 0 || placeholderIndex >= elementCache.count || scrollOffset === 0)\r\n                    cancelAnimationFrame(rafId);\r\n                else\r\n                    rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            }\r\n\r\n            function shift({ element, translateY = 0 }) {\r\n                // element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${translateY}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        release(e) {\r\n\r\n            if (prevent()) return {};\r\n\r\n            enableScrolling();\r\n            elementCache.resetStyles();\r\n\r\n            return { oldIndex: draggableIndex, newIndex: placeholderIndex }\r\n        },\r\n\r\n        drop() {\r\n\r\n            if (prevent()) return {};\r\n\r\n            draggable.release(0, children[placeholderIndex].offsetTop - container.scrollTop);\r\n\r\n            draggable = undefined;\r\n        }\r\n    }\r\n\r\n    function disableScrolling() {\r\n        container.addEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function enableScrolling() {\r\n        container.removeEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function prevent() {\r\n\r\n        if (isHolding) {\r\n            clearTimeout(isHolding);\r\n            isHolding = undefined;\r\n            draggable = undefined;\r\n        }\r\n\r\n        if (!draggable) return true;\r\n\r\n        cancelAnimationFrame(rafId);\r\n\r\n        return false;\r\n    }\r\n\r\n    function getScrollValue() {\r\n\r\n        // let scrollContainer = draggable.element.parentNode;\r\n        // while (scrollContainer) {\r\n        //     if (scrollContainer === document.body) break;\r\n        //     if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n        //     scrollContainer = scrollContainer.parentNode;\r\n        // }\r\n        // scrollContainer = scrollContainer || document.body;\r\n\r\n        const triggerOffset = 80;\r\n        const speedMultiplier = 0.25;\r\n\r\n        const containerRect = container.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(containerRect.top, 0);\r\n        const maxScrollTop = container.scrollHeight - Math.min(container.clientHeight, window.innerHeight);\r\n\r\n        let offset = 0;\r\n        if (bottomOffset < triggerOffset)\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        else if (topOffset < triggerOffset)\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n\r\n        const top = Math.max(0, Math.min(maxScrollTop, container.scrollTop + offset * speedMultiplier));\r\n\r\n        return [top, offset];\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    useEffect(() => {\r\n        handler = new Handler(containerRef.current, props);\r\n    });\r\n\r\n    const containerRef = useRef();\r\n\r\n    let handler;\r\n\r\n    function onTouchStart(e) {\r\n        handler.grasp(e);\r\n        props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n        handler.move(e);\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    function onTouchEnd(e) {\r\n        const result = handler.release(e);\r\n        props.onDrop && props.onDrop(result);\r\n        handler.drop();\r\n    }\r\n\r\n    return <div\r\n        className='container'\r\n        ref={containerRef}\r\n        onTouchStart={onTouchStart}\r\n        onTouchMove={onTouchMove}\r\n        onTouchEnd={onTouchEnd}\r\n        onContextMenu={preventDefault}\r\n    >\r\n        <FlipMove typeName={null} disableAllAnimations={props.reordering}>\r\n            {props.children}\r\n        </FlipMove>\r\n    </div>\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => ({\r\n    label: `Item ${k}`,\r\n    checked: false,\r\n}));\r\n\r\nexport default function App() {\r\n\r\n    let [items, setItems] = useState(generateItems(40));\r\n    let [reordering, setReordering] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (reordering)\r\n            setReordering(false);\r\n    });\r\n\r\n    function onDrop({ oldIndex, newIndex }) {\r\n        const _items = move(items, oldIndex, newIndex);\r\n        _items[newIndex].checked = true;\r\n        const checkedItems = _items.filter(({ checked }) => checked);\r\n        const before = _items.slice(0, newIndex).filter(({ checked }) => !checked);\r\n        const after = _items.slice(newIndex + 1).filter(({ checked }) => !checked);\r\n        const newItems = [...before, ...checkedItems, ...after];\r\n        if (checkedItems.length <= 1)\r\n            setReordering(true);\r\n        setItems(newItems);\r\n        // setReordering(false);\r\n    }\r\n\r\n    function toggle(id, checked) {\r\n        const _items = items.slice();\r\n        console.log(id);\r\n        const item = _items.find(item => item.label === id);\r\n        item.checked = checked;\r\n        setItems(_items);\r\n    }\r\n\r\n    return <div className='list'>\r\n        <Sortable dragClassName='drag-style' onDrop={onDrop} reordering={reordering}>\r\n            {items.map(item =>\r\n                <div key={item.label} className='list-item'>\r\n                    {item.label}\r\n                    <Checkbox id={item.label} checked={item.checked} onChange={toggle} />\r\n                </div>\r\n            )}\r\n        </Sortable>\r\n    </div>\r\n}\r\n\r\nfunction Checkbox(props) {\r\n\r\n    // const [on, toggle] = useToggle(props.checked);\r\n\r\n    function toggleIt(e) {\r\n        e.stopPropagation();\r\n        props.onChange(props.id, e.target.checked);\r\n    }\r\n\r\n    return <input type='checkbox' checked={props.checked} onChange={toggleIt} onTouchEnd={e => e.stopPropagation()} />\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}