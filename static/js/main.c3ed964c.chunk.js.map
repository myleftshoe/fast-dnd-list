{"version":3,"sources":["events.js","Draggable.js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","fireAndForget","target","eventName","Promise","resolve","reject","addEventListener","handler","_ref","removeEventListener","transitions","grasp","moveIntoPlace","settleIntoPlace","Draggable","element","props","startPosition","currentPosition","direction","left","offsetLeft","top","offsetTop","height","offsetHeight","width","offsetWidth","_window$getComputedSt","window","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","initialCenter","dimensions","Math","max","parseInt","displacement","absoluteCenter","this","position","console","log","_this$displacement","Object","slicedToArray","x","y","style","transform","concat","willChange","zIndex","transition","classList","add","dragClassName","raised","_moveIntoPlace","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","abrupt","requestAnimationFrame","stop","_x","_x2","apply","arguments","_settleIntoPlace","_callee2","_context2","remove","release","_release","_callee3","_context3","_x3","_x4","Handler","container","draggable","draggableIndex","placeholderIndex","elements","elementCache","printElementCache","table","map","item","innerText","translateY","Array","prototype","slice","call","children","indexOf","splice","count","length","i","push","populateElementCache","move","_this","touches","clientX","clientY","handleMove","_ref2","scrollAmount","scrollContainer","parentNode","document","body","scrollHeight","clientHeight","offset","scrollable","containerRect","getBoundingClientRect","targetRect","bottomOffset","min","bottom","innerHeight","topOffset","maxScrollTop","scrollTop","scrollIfRequired","_draggable","draggableCenterY","translate","_ref3","_ref3$translateY","oldIndex","newIndex","centerY","forEach","Sortable","useEffect","containerRef","current","useRef","_onTouchEnd","result","stopPropagation","sent","onDrop","react_default","createElement","className","ref","onTouchStart","onGrasp","onTouchMove","Drag","onDrag","onTouchEnd","onContextMenu","defaultProps","generateItems","toConsumableArray","keys","k","actions","reverse","arr","items","shuffle","random","sort","b","removeFrom","undefined","insertAt","isNaN","Number","_arr","App","state","_ref4","setState","key","Component","ReactDOM","render","App_App","getElementById"],"mappings":"oSAAaA,SAAiB,SAAAC,GAAC,OAAIA,EAAED,mBAExBE,EAAgB,SAACC,EAAQC,GAAT,OAAuB,IAAIC,QAAQ,SAACC,EAASC,GAKtEJ,EAAOK,iBAAiBJ,EAJR,SAAVK,EAAUC,GAAgBA,EAAbP,OACRQ,oBAAoBP,EAAWK,GAAS,GAC/CH,MAEwC,MCJ1CM,EAAc,CAChBC,MAAO,+DACPC,cAAe,4BACfC,gBAAiB,gEAGN,SAASC,EAAUC,EAASC,GAEvC,IAAIC,EAAgB,KAChBC,EAAkB,KAClBC,EAAY,KAEIC,EAAmEL,EAA/EM,WAA6BC,EAAkDP,EAA7DQ,UAA8BC,EAA+BT,EAA7CU,aAAmCC,EAAUX,EAAvBY,YANlBC,EAOeC,OAAOC,iBAAiBf,GAA7EgB,EAPsCH,EAOtCG,UAAWC,EAP2BJ,EAO3BI,aAAcC,EAPaL,EAObK,WAAYC,EAPCN,EAODM,YAEvCC,EAAgB,CAACf,EAAOM,EAAQ,EAAGJ,EAAME,EAAS,GAClDY,EAAa,CACfV,MAAOA,EAAQW,KAAKC,IAAIC,SAASN,GAAaM,SAASL,IACvDV,OAAQA,EAASa,KAAKC,IAAIC,SAASR,GAAYQ,SAASP,KAG5D,MAAO,CAEHjB,cAAgB,OAAOA,GAEvBI,gBAAkB,OAAOA,GAEzBqB,mBACI,MAAO,CACHtB,EAAgB,GAAKD,EAAc,GACnCC,EAAgB,GAAKD,EAAc,KAI3CmB,iBAAmB,OAAOA,GAE1BK,qBACI,MAAO,CAACN,EAAc,GAAKO,KAAKF,aAAa,GAAIL,EAAc,GAAKO,KAAKF,aAAa,KAS1FG,aAAaA,GACLzB,GAEIC,EADAwB,EAAS,GAAKzB,EAAgB,GAClB,KAEA,OAChB0B,QAAQC,IAAIF,EAAS,GAAIzB,EAAgB,GAAIC,IAE5CyB,QAAQC,IAAI,QACjB3B,EAAkByB,EACb1B,IACDA,EAAgBC,GAXD,IAAA4B,EAAAC,OAAAC,EAAA,EAAAD,CAYJL,KAAKF,aAZD,GAYZS,EAZYH,EAAA,GAYTI,EAZSJ,EAAA,GAanB/B,EAAQoC,MAAMC,UAAd,aAAAC,OAAuCJ,EAAvC,OAAAI,OAA8CH,EAA9C,QAGJP,eAAiB,OAAOzB,GAExBP,MA3CG,WA4CCI,EAAQoC,MAAMG,WAAa,YAC3BvC,EAAQoC,MAAMI,OAAS,IAEvBxC,EAAQoC,MAAMR,SAAW,WACzB5B,EAAQoC,MAAMK,WAAa9C,EAAYC,MACvCI,EAAQ0C,UAAUC,IAAI1C,EAAM2C,eAC5B3C,EAAM4C,QAAU7C,EAAQ0C,UAAUC,IAAI,WAGpC9C,cArDH,eAAAiD,EAAAd,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAA,SAAAC,EAqDiBjB,EAAGC,GArDpB,IAAAiB,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAsDKrD,IAAoBD,EAtDzB,CAAAoD,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAuDYrE,QAAQC,WAvDpB,cAwDO+D,EAAQnE,EAAce,EAAS,iBACrC0D,sBAAsB,WAClB1D,EAAQoC,MAAMK,WAAa9C,EAAYE,cACvCG,EAAQoC,MAAMC,UAAd,iBAAAC,OAA2CH,EAAInC,EAAQQ,UAAvD,SA3DL8C,EAAAE,KAAA,EA6DOJ,EA7DP,cAAAE,EAAAG,OAAA,SA8DQL,GA9DR,wBAAAE,EAAAK,SAAAR,EAAAxB,SAAA,gBAAAiC,EAAAC,GAAA,OAAAf,EAAAgB,MAAAnC,KAAAoC,YAAA,GAiEGjE,gBAjEH,eAAAkE,EAAAhC,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAA,SAAAe,IAAA,IAAAb,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAkEOJ,EAAQnE,EAAce,EAAS,iBACrC0D,sBAAsB,WAClB1D,EAAQ0C,UAAUyB,OAAOlE,EAAM2C,eAC/B5C,EAAQ0C,UAAUyB,OAAO,UACzBnE,EAAQoC,MAAMK,WAAa9C,EAAYG,kBAtE5CoE,EAAAV,KAAA,EAwEOJ,EAxEP,wBAAAc,EAAAP,SAAAM,EAAAtC,SAAA,yBAAAqC,EAAAF,MAAAnC,KAAAoC,YAAA,GA2EGK,QA3EH,eAAAC,EAAArC,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAA,SAAAoB,EA2EWpC,EAAGC,GA3Ed,OAAAa,EAAAC,EAAAI,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EA4EO7B,KAAK9B,cAAcqC,EAAGC,GA5E7B,cAAAoC,EAAAf,KAAA,EA6EO7B,KAAK7B,kBA7EZ,OA8ECE,EAAQoC,MAAMR,SAAW,KAEzB5B,EAAQoC,MAAMI,OAAS,KACvBxC,EAAQoC,MAAMK,WAAa,KAC3BzC,EAAQoC,MAAMC,UAAY,KAlF3B,wBAAAkC,EAAAZ,SAAAW,EAAA3C,SAAA,gBAAA6C,EAAAC,GAAA,OAAAJ,EAAAP,MAAAnC,KAAAoC,YAAA,ICtBI,IAAAW,EAAA,SAAUC,EAAW1E,GAEhC,IAAI2E,EACAC,EACAC,EACAC,EACAC,EAaJ,SAASC,IACLpD,QAAQqD,MAAMF,EAAaG,IAAI,SAAAnF,GAE3B,MAAO,CAAEoF,KADiDpF,EAAlDA,QAAWqF,UACJ9E,IAD2CP,EAApBO,IAClB+E,WADsCtF,EAAfsF,eAKnD,MAAO,CAEH1F,MAFG,SAEGZ,GAEEA,EAAEE,SAAWyF,KAEjBC,EAAY,IAAI7E,EAAUf,EAAEE,OAAQe,IAC1BL,MAAMgF,GAIhBG,EAAWQ,MAAMC,UAAUC,MAAMC,KAAKf,EAAUgB,UAEhDd,EAAiBE,EAASa,QAAQhB,EAAU5E,SAC5C8E,EAAmBD,EAEnBE,EAASc,OAAOhB,EAAgB,GAlCxC,WAEIG,EAAe,GAGf,IADA,IAAMc,EAAQf,EAASgB,OACdC,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAC5B,IAAMhG,EAAU+E,EAASiB,GACzBhB,EAAaiB,KAAK,CAAEjG,UAASO,IAAKP,EAAQQ,UAAWC,OAAQT,EAAQU,aAAc4E,WAAY,KA6B/FY,GAEAjB,MAKJkB,KAzBG,SAyBEnH,GAAG,IAAAoH,EAAAzE,KACJ,GAAKiD,EAAL,CACA/C,QAAQC,IAAI,QACZ,IAAMF,EAAW,CAAC5C,EAAEqH,QAAQ,GAAGC,QAAStH,EAAEqH,QAAQ,GAAGE,SACrD7C,sBAAsB,kBAAM0C,EAAKI,WAAW5E,OAGhD4E,WAhCG,SAAA/G,GAgCgB,IAAAgH,EAAAzE,OAAAC,EAAA,EAAAD,CAAAvC,EAAA,GAAPyC,EAAOuE,EAAA,GAAJtE,EAAIsE,EAAA,GAETC,EA4Dd,WAEI,IAAIC,EAAkB/B,EAAU5E,QAAQ4G,WACxC,KAAOD,GACCA,IAAoBE,SAASC,QAC7BH,EAAgBI,aAAeJ,EAAgBK,cAA2E,YAA3DlG,OAAOC,iBAAiB4F,GAAiB,gBAC5GA,EAAkBA,EAAgBC,WAEtCD,EAAkBA,GAAmBE,SAASC,KAE9C,IACIG,EAAS,EAEPC,EAAaP,EACbQ,EAAgBD,EAAWE,wBAC3BC,EAAazC,EAAU5E,QAAQoH,wBAC/BE,EAAehG,KAAKiG,IAAIJ,EAAcK,OAAQ1G,OAAO2G,aAAeJ,EAAWG,OAC/EE,EAAYL,EAAW9G,IAAMe,KAAKC,IAAI4F,EAAc5G,IAAK,GACzDoH,EAAehD,EAAUoC,aAAezF,KAAKiG,IAAIL,EAAWF,aAAclG,OAAO2G,aAEnFH,EAVkB,GAWlBL,EAAS3F,KAAKiG,IAXI,MAW+BD,GAE5CI,EAba,KAclBT,EAAS3F,KAAKC,KAdI,GAcgBmG,EAdhB,KAgBtB,IAAMhB,EAAepF,KAAKC,IAAI,EAAGD,KAAKiG,IAAII,EAAcT,EAAWU,UAAYX,IAE/E,OADAC,EAAWU,UAAYlB,EAChBA,EAxFkBmB,GAErBjD,EAAUhD,SAAW,CAACM,EAAGC,EAAIuE,GAJd,IAAAoB,EAM+BlD,EAAtCxE,EANO0H,EAMP1H,UAAyBK,EANlBqH,EAMIzG,WAAcZ,OAE3BsH,EAAmBnD,EAAUlD,eAAe,GAElD,GADAG,QAAQC,IAAI1B,GACM,SAAdA,EACA,KAAuB0E,EAAmBC,EAASgB,OAAQjB,IAAoB,CAC3E,IAAM9E,EAAUgF,EAAaF,GAC7B,GAAI9E,EAAQO,IAAMwH,EAAkB,MACpClG,QAAQC,IAAIiG,GACZ/H,EAAQO,KAAOE,EACfT,EAAQsF,YAAc7E,EACtBuH,EAAUhI,QAGb,GAAkB,OAAdI,EACL,KAAuB0E,EAAmB,EAAGA,IAAoB,CAC7D,IAAM9E,EAAUgF,EAAaF,EAAmB,GAEhD,GADe9E,EAAQO,IAAMP,EAAQS,OACxBsH,EAAkB,MAC/BlG,QAAQC,IAAIiG,GACZ/H,EAAQO,KAAOE,EACfT,EAAQsF,YAAc7E,EACtBuH,EAAUhI,GAIlB,SAASgI,EAATC,GAAgD,IAA3BjI,EAA2BiI,EAA3BjI,QAA2BkI,EAAAD,EAAlB3C,kBAAkB,IAAA4C,EAAL,EAAKA,EAC5ClI,EAAQoC,MAAMG,WAAa,YAC3BvC,EAAQoC,MAAR,WAA8B,4BAC9BpC,EAAQoC,MAAR,wBAAAE,OAA2CgD,EAA3C,SAKFlB,QAxEH,eAAAC,EAAArC,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAA,SAAAC,EAwEWnE,GAxEX,IAAAmJ,EAAAC,EAAA,OAAApF,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UA0EC3B,QAAQqD,MAAM,CAAC,CAAEN,UAAWA,EAAU5E,QAAQqF,UAAWgD,QAASzD,EAAUlD,eAAe,GAAI4D,WAAYV,EAAU5E,QAAQoC,MAAMC,aACnI4C,IACApD,QAAQC,IAAI6C,EAAUqC,cAEjBpC,EA9EN,CAAAtB,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SA8EwB,CAAE0E,SAAU,KAAMC,SAAU,OA9EpD,cAgFOD,EAAWtD,EACXuD,EAAWtD,EAjFlBxB,EAAAE,KAAA,EAmFOoB,EAAUR,QAAQ,EAAGO,EAAUgB,SAASb,GAAkBtE,WAnFjE,cAqFCuE,EAASuD,QAAQ,SAAAtI,GACbA,EAAQoC,MAAMK,WAAa,KAC3BzC,EAAQoC,MAAMC,UAAY,OAvF/BiB,EAAAG,OAAA,SA0FQ,CAAE0E,WAAUC,aA1FpB,yBAAA9E,EAAAK,SAAAR,EAAAxB,SAAA,gBAAAiC,GAAA,OAAAS,EAAAP,MAAAnC,KAAAoC,YAAA,KCrBI,SAASwE,EAAStI,GAE7BuI,oBAAU,WAEN,OADAhJ,EAAU,IAAIkF,EAAQ+D,EAAaC,QAASzI,GACrC,OAGX,IAEIT,EAFEiJ,EAAeE,mBAPe,SAAAC,IAAA,OAAAA,EAAA5G,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAuBpC,SAAAC,EAA0BnE,GAA1B,IAAA6J,EAAA,OAAA7F,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACIxE,EAAE8J,kBADNxF,EAAAE,KAAA,EAEyBhE,EAAQ4E,QAAQpF,GAFzC,OAEU6J,EAFVvF,EAAAyF,KAGI9I,EAAM+I,QAAU/I,EAAM+I,OAAOH,GAHjC,wBAAAvF,EAAAK,SAAAR,EAAAxB,UAvBoCmC,MAAAnC,KAAAoC,WA6BpC,OAAOkF,EAAAhG,EAAAiG,cAAA,OACHC,UAAU,YACVC,IAAKX,EACLY,aArBJ,SAAsBrK,GAClBA,EAAE8J,kBACFtJ,EAAQI,MAAMZ,GACdiB,EAAMqJ,SAAWrJ,EAAMqJ,WAmBvBC,YAhBJ,SAAqBvK,GACjBA,EAAE8J,kBACFtJ,EAAQ2G,KAAKnH,GACbiB,EAAMuJ,MAAQvJ,EAAMwJ,UAcpBC,WAlCgC,SAAA9F,GAAA,OAAAgF,EAAA9E,MAAAnC,KAAAoC,YAmChC4F,cAAe5K,GAEdkB,EAAM0F,UAcf4C,EAASqB,aAAe,CACpB/G,QAAQ,EACRD,cAAe,cC5DZ,ICKDiH,EAAgB,SAAA9D,GAAM,OAAI/D,OAAA8H,EAAA,EAAA9H,CAAIuD,MAAMQ,GAAQgE,QAAQ5E,IAAI,SAAA6E,GAAC,cAAA1H,OAAY0H,MAErEC,EAAU,CACZC,QAAS,SAAAzK,GAAA,IDeU0K,ECfPC,EAAH3K,EAAG2K,MAAH,MAAgB,CAAEA,ODeRD,ECfuBC,EDehBD,EAAI1E,QAAQyE,aCdtCG,QAAS,SAAA5D,GAAA,IDSU0D,ECTPC,EAAH3D,EAAG2D,MAAH,MAAgB,CAAEA,ODSRD,ECTuBC,EDShBD,EACzBhF,IAAI,SAAAlC,GAAC,MAAI,CAAC3B,KAAKgJ,SAAUrH,KACzBsH,KAAK,SAACtH,EAAGuH,GAAJ,OAAUvH,EAAE,GAAKuH,EAAE,KACxBrF,IAAI,SAAAlC,GAAC,OAAIA,EAAE,QCXZkD,KAAM,SAACgC,EAAUC,GAAX,OAAwB,SAAAH,GAAA,MAAgB,CAAEmC,MDVhC,SAACD,GAAwC,IAAnCM,EAAmC1G,UAAAgC,OAAA,QAAA2E,IAAA3G,UAAA,GAAAA,UAAA,GAAxB,KAAM4G,EAAkB5G,UAAAgC,OAAA,QAAA2E,IAAA3G,UAAA,GAAAA,UAAA,GAAT,KAKhD,GAAI4G,IAAaF,EAAY,OAAON,EACpC,GAAIS,MAAMC,OAAOJ,IAAeG,MAAMC,OAAOF,KAAa,OAAOR,EAEjE,IAAIW,EAAI9I,OAAA8H,EAAA,EAAA9H,CAAOmI,GAET/E,EAAuB,OAAfqF,EAAuBK,EAAKjF,OAAO4E,EAAY,GAAG,GAAK,KAKrE,OAJiB,OAAbE,GACAG,EAAKjF,OAAO8E,EAAU,EAAGvF,GAGtB0F,ECLgD3E,CAAzB8B,EAAGmC,MAAkCjC,EAAUC,OAG5D2C,6MAEjBC,MAAQ,CAAEZ,MAAOP,EAAc,QAE/Bb,OAAS,SAAAiC,GAAA,IAAG9C,EAAH8C,EAAG9C,SAAUC,EAAb6C,EAAa7C,SAAb,OAA4BhC,EAAK8E,SAASjB,EAAQ9D,KAAKgC,EAAUC,6EAGtE,OAAOa,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,QAClBF,EAAAhG,EAAAiG,cAACX,EAAD,CAAU3F,cAAc,aAAaoG,OAAQrH,KAAKqH,QAC7CrH,KAAKqJ,MAAMZ,MAAMjF,IAAI,SAAAC,GAAI,OACtB6D,EAAAhG,EAAAiG,cAAA,OAAKiC,IAAK/F,EAAM+D,UAAU,aAAa/D,cAV1BgG,aCTjCC,IAASC,OAAOrC,EAAAhG,EAAAiG,cAACqC,EAAD,MAAS1E,SAAS2E,eAAe","file":"static/js/main.c3ed964c.chunk.js","sourcesContent":["export const preventDefault = e => e.preventDefault();\r\n\r\nexport const fireAndForget = (target, eventName) => new Promise((resolve, reject) => {\r\n    const handler = ({ target }) => {\r\n        target.removeEventListener(eventName, handler, false);\r\n        resolve();\r\n    }\r\n    target.addEventListener(eventName, handler, false);\r\n})\r\n","import './Draggable.css';\r\nimport { fireAndForget } from './events';\r\n\r\nconst transitions = {\r\n    grasp: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out',\r\n    moveIntoPlace: 'transform .2s ease-in-out',\r\n    settleIntoPlace: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out'\r\n}\r\n\r\nexport default function Draggable(element, props) {\r\n\r\n    let startPosition = null;\r\n    let currentPosition = null;\r\n    let direction = null;\r\n\r\n    const { offsetLeft: left, offsetTop: top, offsetHeight: height, offsetWidth: width } = element;\r\n    const { marginTop, marginBottom, marginLeft, marginRight } = window.getComputedStyle(element);\r\n\r\n    const initialCenter = [left + width / 2, top + height / 2];\r\n    const dimensions = {\r\n        width: width + Math.max(parseInt(marginLeft), parseInt(marginRight)),\r\n        height: height + Math.max(parseInt(marginTop), parseInt(marginBottom)),\r\n    }\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get direction() { return direction },\r\n\r\n        get displacement() {\r\n            return [\r\n                currentPosition[0] - startPosition[0],\r\n                currentPosition[1] - startPosition[1],\r\n            ]\r\n        },\r\n\r\n        get dimensions() { return dimensions },\r\n\r\n        get absoluteCenter() {\r\n            return [initialCenter[0] + this.displacement[0], initialCenter[1] + this.displacement[1]];\r\n        },\r\n\r\n        // get absoluteCenter() {\r\n        //     const { left, top, height, width } = element.getBoundingClientRect();\r\n        //     return [left + width / 2, top + height / 2];\r\n        //     // return [element.offsetLeft + this.dimensions.width / 2, element.offsetTop + this.dimensions.height / 2];\r\n        // },\r\n\r\n        set position(position) {\r\n            if (currentPosition) {\r\n                if (position[1] < currentPosition[1])\r\n                    direction = 'up';\r\n                else\r\n                    direction = 'down';\r\n                console.log(position[1], currentPosition[1], direction);\r\n            }\r\n            else console.log('null');\r\n            currentPosition = position;\r\n            if (!startPosition)\r\n                startPosition = currentPosition;\r\n            const [x, y] = this.displacement;\r\n            element.style.transform = `translate(${x}px,${y}px)`;\r\n        },\r\n\r\n        get position() { return currentPosition },\r\n\r\n        grasp() {\r\n            element.style.willChange = 'transform';\r\n            element.style.zIndex = 999;\r\n            // element.style.pointerEvents = 'none';\r\n            element.style.position = 'relative';\r\n            element.style.transition = transitions.grasp;\r\n            element.classList.add(props.dragClassName);\r\n            props.raised && element.classList.add('shadow');\r\n        },\r\n\r\n        async moveIntoPlace(x, y) {\r\n            if (currentPosition === startPosition)\r\n                return Promise.resolve();\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.style.transition = transitions.moveIntoPlace;\r\n                element.style.transform = `translate(0px,${y - element.offsetTop}px)`;\r\n            });\r\n            await event;\r\n            return event;\r\n        },\r\n\r\n        async settleIntoPlace() {\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.classList.remove(props.dragClassName);\r\n                element.classList.remove('shadow');\r\n                element.style.transition = transitions.settleIntoPlace;\r\n            });\r\n            await event;\r\n        },\r\n\r\n        async release(x, y) {\r\n            await this.moveIntoPlace(x, y);\r\n            await this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n        }\r\n    }\r\n}\r\n","import Draggable from './Draggable';\r\n\r\nexport default function (container, props) {\r\n\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    let elements;\r\n    let elementCache;\r\n\r\n    function populateElementCache() {\r\n\r\n        elementCache = [];\r\n\r\n        const count = elements.length;\r\n        for (let i = 0; i < count; i++) {\r\n            const element = elements[i];\r\n            elementCache.push({ element, top: element.offsetTop, height: element.offsetHeight, translateY: 0 });\r\n        }\r\n    }\r\n\r\n    function printElementCache() {\r\n        console.table(elementCache.map(element => {\r\n            const { element: { innerText: item }, top, translateY } = element;\r\n            return { item, top, translateY }\r\n        }));\r\n    }\r\n\r\n    return {\r\n\r\n        grasp(e) {\r\n\r\n            if (e.target === container) return;\r\n\r\n            draggable = new Draggable(e.target, props);\r\n            draggable.grasp(draggable);\r\n\r\n            // [...container.children], container.children.slice(), Array.from\r\n            // do not work in ms edge.\r\n            elements = Array.prototype.slice.call(container.children);\r\n\r\n            draggableIndex = elements.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elements.splice(draggableIndex, 1);\r\n\r\n            populateElementCache();\r\n\r\n            printElementCache();\r\n\r\n\r\n        },\r\n\r\n        move(e) {\r\n            if (!draggable) return;\r\n            console.log('****')\r\n            const position = [e.touches[0].clientX, e.touches[0].clientY];\r\n            requestAnimationFrame(() => this.handleMove(position));\r\n        },\r\n\r\n        handleMove([x, y]) {\r\n\r\n            const scrollAmount = scrollIfRequired();\r\n\r\n            draggable.position = [x, y + scrollAmount];\r\n\r\n            const { direction, dimensions: { height } } = draggable;\r\n\r\n            const draggableCenterY = draggable.absoluteCenter[1];\r\n            console.log(direction)\r\n            if (direction === 'down') {\r\n                for (placeholderIndex; placeholderIndex < elements.length; placeholderIndex++) {\r\n                    const element = elementCache[placeholderIndex];\r\n                    if (element.top > draggableCenterY) break;\r\n                    console.log(draggableCenterY)\r\n                    element.top -= height;\r\n                    element.translateY -= height;\r\n                    translate(element);\r\n                }\r\n            }\r\n            else if (direction === 'up') {\r\n                for (placeholderIndex; placeholderIndex > 0; placeholderIndex--) {\r\n                    const element = elementCache[placeholderIndex - 1];\r\n                    const bottom = element.top + element.height;\r\n                    if (bottom < draggableCenterY) break;\r\n                    console.log(draggableCenterY)\r\n                    element.top += height;\r\n                    element.translateY += height;\r\n                    translate(element);\r\n                }\r\n            }\r\n\r\n            function translate({ element, translateY = 0 }) {\r\n                element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${translateY}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        async release(e) {\r\n\r\n            console.table([{ draggable: draggable.element.innerText, centerY: draggable.absoluteCenter[1], translateY: draggable.element.style.transform }])\r\n            printElementCache();\r\n            console.log(container.clientHeight);\r\n\r\n            if (!draggable) return { oldIndex: null, newIndex: null };\r\n\r\n            const oldIndex = draggableIndex;\r\n            const newIndex = placeholderIndex;\r\n\r\n            await draggable.release(0, container.children[placeholderIndex].offsetTop);\r\n\r\n            elements.forEach(element => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n\r\n            return { oldIndex, newIndex }\r\n        }\r\n    }\r\n\r\n    function scrollIfRequired() {\r\n\r\n        let scrollContainer = draggable.element.parentNode;\r\n        while (scrollContainer) {\r\n            if (scrollContainer === document.body) break;\r\n            if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n            scrollContainer = scrollContainer.parentNode;\r\n        }\r\n        scrollContainer = scrollContainer || document.body;\r\n\r\n        const triggerOffset = 40;\r\n        let offset = 0;\r\n\r\n        const scrollable = scrollContainer;\r\n        const containerRect = scrollable.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(containerRect.top, 0);\r\n        const maxScrollTop = container.scrollHeight - Math.min(scrollable.clientHeight, window.innerHeight);\r\n\r\n        if (bottomOffset < triggerOffset) {\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        }\r\n        else if (topOffset < triggerOffset) {\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n        }\r\n        const scrollAmount = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset));\r\n        scrollable.scrollTop = scrollAmount;\r\n        return scrollAmount;\r\n    }\r\n\r\n    function getComputedTranslation(element) {\r\n        const transformMatrix = window.getComputedStyle(element).getPropertyValue('transform');\r\n        const [, , , , x, y] = transformMatrix.match(/-?\\d+/g) || [0, 0, 0, 0, 0, 0];\r\n        return [x, y]\r\n    }\r\n\r\n    function getTranslateY(element) {\r\n        return Number((element.style.transform.match(/-?\\d+/g) || [0])[1])\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    useEffect(() => {\r\n        handler = new Handler(containerRef.current, props);\r\n        return null;\r\n    });\r\n\r\n    const containerRef = useRef();\r\n\r\n    let handler;\r\n\r\n    function onTouchStart(e) {\r\n        e.stopPropagation();\r\n        handler.grasp(e);\r\n        props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n        e.stopPropagation();\r\n        handler.move(e);\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    async function onTouchEnd(e) {\r\n        e.stopPropagation();\r\n        const result = await handler.release(e);\r\n        props.onDrop && props.onDrop(result)\r\n    }\r\n\r\n    return <div\r\n        className='container'\r\n        ref={containerRef}\r\n        onTouchStart={onTouchStart}\r\n        onTouchMove={onTouchMove}\r\n        onTouchEnd={onTouchEnd}\r\n        onContextMenu={preventDefault}\r\n    >\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move, shuffle, reverse } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nconst actions = {\r\n    reverse: ({ items }) => ({ items: reverse(items) }),\r\n    shuffle: ({ items }) => ({ items: shuffle(items) }),\r\n    move: (oldIndex, newIndex) => ({ items }) => ({ items: move(items, oldIndex, newIndex) }),\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n    state = { items: generateItems(100) }\r\n\r\n    onDrop = ({ oldIndex, newIndex }) => this.setState(actions.move(oldIndex, newIndex))\r\n\r\n    render() {\r\n        return <div className='list'>\r\n            <Sortable dragClassName='drag-style' onDrop={this.onDrop}>\r\n                {this.state.items.map(item =>\r\n                    <div key={item} className='list-item'>{item}</div>)\r\n                }\r\n            </Sortable>\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}