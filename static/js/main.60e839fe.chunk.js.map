{"version":3,"sources":["events.js","Draggable.js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","fireAndForget","target","eventName","Promise","resolve","reject","addEventListener","handler","_ref","removeEventListener","transitions","grasp","moveIntoPlace","settleIntoPlace","Draggable","element","props","startPosition","currentPosition","direction","left","offsetLeft","top","offsetTop","height","offsetHeight","width","offsetWidth","_window$getComputedSt","window","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","initialCenter","dimensions","Math","max","parseInt","displacement","absoluteCenter","this","position","_this$displacement","Object","slicedToArray","x","y","style","transform","concat","willChange","zIndex","transition","classList","add","dragClassName","raised","_moveIntoPlace","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","abrupt","requestAnimationFrame","stop","_x","_x2","apply","arguments","_settleIntoPlace","_callee2","_context2","remove","release","_release","_callee3","_context3","_x3","_x4","Handler","container","draggable","draggableIndex","placeholderIndex","elements","elementCache","Array","prototype","slice","call","children","indexOf","splice","count","length","i","push","translateY","populateElementCache","move","touches","clientX","clientY","handleMove","scrollContainer","parentNode","document","body","scrollHeight","clientHeight","offset","scrollable","containerRect","getBoundingClientRect","targetRect","bottomOffset","min","bottom","innerHeight","topOffset","maxScrollTop","scrollAmount","scrollTop","scrollIfRequired","_draggable","draggableCenterY","translate","_ref$translateY","oldIndex","newIndex","forEach","Sortable","useEffect","containerRef","current","useRef","_onTouchEnd","result","stopPropagation","sent","onDrop","react_default","createElement","className","ref","onTouchStart","onGrasp","onTouchMove","Drag","onDrag","onTouchEnd","onContextMenu","defaultProps","generateItems","toConsumableArray","keys","map","k","actions","reverse","arr","items","shuffle","_ref2","random","sort","b","_ref3","removeFrom","undefined","insertAt","isNaN","Number","_arr","item","App","state","_ref4","_this","setState","key","Component","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.60e839fe.chunk.js","sourcesContent":["export const preventDefault = e => e.preventDefault();\r\n\r\nexport const fireAndForget = (target, eventName) => new Promise((resolve, reject) => {\r\n    const handler = ({ target }) => {\r\n        target.removeEventListener(eventName, handler, false);\r\n        resolve();\r\n    }\r\n    target.addEventListener(eventName, handler, false);\r\n})\r\n","import './Draggable.css';\r\nimport { fireAndForget } from './events';\r\n\r\nconst transitions = {\r\n    grasp: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out',\r\n    moveIntoPlace: 'transform .2s ease-in-out',\r\n    settleIntoPlace: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out'\r\n}\r\n\r\nexport default function Draggable(element, props) {\r\n\r\n    let startPosition = null;\r\n    let currentPosition = null;\r\n    let direction = null;\r\n\r\n    const { offsetLeft: left, offsetTop: top, offsetHeight: height, offsetWidth: width } = element;\r\n    const { marginTop, marginBottom, marginLeft, marginRight } = window.getComputedStyle(element);\r\n\r\n    const initialCenter = [left + width / 2, top + height / 2];\r\n    const dimensions = {\r\n        width: width + Math.max(parseInt(marginLeft), parseInt(marginRight)),\r\n        height: height + Math.max(parseInt(marginTop), parseInt(marginBottom)),\r\n    }\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get direction() { return direction },\r\n\r\n        get displacement() {\r\n            return [\r\n                currentPosition[0] - startPosition[0],\r\n                currentPosition[1] - startPosition[1],\r\n            ]\r\n        },\r\n\r\n        get dimensions() { return dimensions },\r\n\r\n        get absoluteCenter() {\r\n            return [initialCenter[0] + this.displacement[0], initialCenter[1] + this.displacement[1]];\r\n        },\r\n\r\n        // get absoluteCenter() {\r\n        //     const { left, top, height, width } = element.getBoundingClientRect();\r\n        //     return [left + width / 2, top + height / 2];\r\n        //     // return [element.offsetLeft + this.dimensions.width / 2, element.offsetTop + this.dimensions.height / 2];\r\n        // },\r\n\r\n        set position(position) {\r\n            if (currentPosition) {\r\n                if (position[1] < currentPosition[1])\r\n                    direction = 'up';\r\n                else\r\n                    direction = 'down';\r\n            }\r\n            currentPosition = position;\r\n            if (!startPosition)\r\n                startPosition = currentPosition;\r\n            const [x, y] = this.displacement;\r\n            element.style.transform = `translate(${x}px,${y}px)`;\r\n        },\r\n\r\n        grasp() {\r\n            element.style.willChange = 'transform';\r\n            element.style.zIndex = 999;\r\n            // element.style.pointerEvents = 'none';\r\n            element.style.position = 'relative';\r\n            element.style.transition = transitions.grasp;\r\n            element.classList.add(props.dragClassName);\r\n            props.raised && element.classList.add('shadow');\r\n        },\r\n\r\n        async moveIntoPlace(x, y) {\r\n            if (currentPosition === startPosition)\r\n                return Promise.resolve();\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.style.transition = transitions.moveIntoPlace;\r\n                element.style.transform = `translate(0px,${y - element.offsetTop}px)`;\r\n            });\r\n            await event;\r\n            return event;\r\n        },\r\n\r\n        async settleIntoPlace() {\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.classList.remove(props.dragClassName);\r\n                element.classList.remove('shadow');\r\n                element.style.transition = transitions.settleIntoPlace;\r\n            });\r\n            await event;\r\n        },\r\n\r\n        async release(x, y) {\r\n            await this.moveIntoPlace(x, y);\r\n            await this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n        }\r\n    }\r\n}\r\n","import Draggable from './Draggable';\r\n\r\nexport default function (container, props) {\r\n\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    let elements;\r\n    let elementCache;\r\n\r\n    function populateElementCache() {\r\n\r\n        elementCache = [];\r\n\r\n        const count = elements.length;\r\n        for (let i = 0; i < count; i++) {\r\n            const element = elements[i];\r\n            elementCache.push({ element, top: element.offsetTop, height: element.offsetHeight, translateY: 0 });\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n\r\n        grasp(e) {\r\n\r\n            if (e.target === container) return;\r\n\r\n            draggable = new Draggable(e.target, props);\r\n            draggable.grasp(draggable);\r\n\r\n            // [...container.children], container.children.slice(), Array.from\r\n            // do not work in ms edge.\r\n            elements = Array.prototype.slice.call(container.children);\r\n\r\n            draggableIndex = elements.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elements.splice(draggableIndex, 1);\r\n\r\n            populateElementCache();\r\n\r\n        },\r\n\r\n        move(e) {\r\n            if (!draggable) return;\r\n            draggable.position = [e.touches[0].clientX, e.touches[0].clientY];\r\n            requestAnimationFrame(this.handleMove);\r\n        },\r\n\r\n        handleMove(e) {\r\n\r\n            scrollIfRequired();\r\n\r\n            const { direction, dimensions: { height } } = draggable;\r\n\r\n            const draggableCenterY = draggable.absoluteCenter[1];\r\n\r\n            if (direction === 'down') {\r\n                for (placeholderIndex; placeholderIndex < elements.length; placeholderIndex++) {\r\n                    const element = elementCache[placeholderIndex];\r\n                    if (element.top > draggableCenterY) break;\r\n                    element.top -= height;\r\n                    element.translateY -= height;\r\n                    translate(element);\r\n                }\r\n            }\r\n            else if (direction === 'up') {\r\n                for (placeholderIndex; placeholderIndex > 0; placeholderIndex--) {\r\n                    const element = elementCache[placeholderIndex - 1];\r\n                    const bottom = element.top + element.height;\r\n                    if (bottom < draggableCenterY) break;\r\n                    element.top += height;\r\n                    element.translateY += height;\r\n                    translate(element);\r\n                }\r\n            }\r\n\r\n            function translate({ element, translateY = 0 }) {\r\n                element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${translateY}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        async release(e) {\r\n\r\n            if (!draggable) return { oldIndex: null, newIndex: null };\r\n\r\n            const oldIndex = draggableIndex;\r\n            const newIndex = placeholderIndex;\r\n\r\n            await draggable.release(0, container.children[placeholderIndex].offsetTop);\r\n\r\n            elements.forEach(element => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n\r\n            return { oldIndex, newIndex }\r\n        }\r\n    }\r\n\r\n    function scrollIfRequired() {\r\n\r\n        let scrollContainer = draggable.element.parentNode;\r\n        while (scrollContainer) {\r\n            if (scrollContainer === document.body) break;\r\n            if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n            scrollContainer = scrollContainer.parentNode;\r\n        }\r\n        scrollContainer = scrollContainer || document.body;\r\n\r\n        const triggerOffset = 40;\r\n        let offset = 0;\r\n\r\n        const scrollable = scrollContainer;\r\n        const containerRect = scrollable.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(containerRect.top, 0);\r\n        const maxScrollTop = container.scrollHeight - Math.min(scrollable.clientHeight, window.innerHeight);\r\n\r\n        if (bottomOffset < triggerOffset) {\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        }\r\n        else if (topOffset < triggerOffset) {\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n        }\r\n        const scrollAmount = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset));\r\n        scrollable.scrollTop = scrollAmount;\r\n    }\r\n\r\n    function getComputedTranslation(element) {\r\n        const transformMatrix = window.getComputedStyle(element).getPropertyValue('transform');\r\n        const [, , , , x, y] = transformMatrix.match(/-?\\d+/g) || [0, 0, 0, 0, 0, 0];\r\n        return [x, y]\r\n    }\r\n\r\n    function getTranslateY(element) {\r\n        return Number((element.style.transform.match(/-?\\d+/g) || [0])[0])\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    useEffect(() => {\r\n        handler = new Handler(containerRef.current, props);\r\n        return null;\r\n    });\r\n\r\n    const containerRef = useRef();\r\n\r\n    let handler;\r\n\r\n    function onTouchStart(e) {\r\n        e.stopPropagation();\r\n        handler.grasp(e);\r\n        props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n        e.stopPropagation();\r\n        handler.move(e);\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    async function onTouchEnd(e) {\r\n        e.stopPropagation();\r\n        const result = await handler.release(e);\r\n        props.onDrop && props.onDrop(result)\r\n    }\r\n\r\n    return <div\r\n        className='container'\r\n        ref={containerRef}\r\n        onTouchStart={onTouchStart}\r\n        onTouchMove={onTouchMove}\r\n        onTouchEnd={onTouchEnd}\r\n        onContextMenu={preventDefault}\r\n    >\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move, shuffle, reverse } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nconst actions = {\r\n    reverse: ({ items }) => ({ items: reverse(items) }),\r\n    shuffle: ({ items }) => ({ items: shuffle(items) }),\r\n    move: (oldIndex, newIndex) => ({ items }) => ({ items: move(items, oldIndex, newIndex) }),\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n    state = { items: generateItems(100) }\r\n\r\n    onDrop = ({ oldIndex, newIndex }) => this.setState(actions.move(oldIndex, newIndex))\r\n\r\n    render() {\r\n        return <div className='list'>\r\n            <Sortable dragClassName='drag-style' onDrop={this.onDrop}>\r\n                {this.state.items.map(item =>\r\n                    <div key={item} className='list-item'>{item}</div>)\r\n                }\r\n            </Sortable>\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}