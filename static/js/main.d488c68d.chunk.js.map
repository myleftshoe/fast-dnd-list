{"version":3,"sources":["events.js","Draggable.js","ElementCache.js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","fireAndForget","target","eventName","Promise","resolve","reject","addEventListener","handler","_ref","removeEventListener","transitions","grasp","moveIntoPlace","settleIntoPlace","Draggable","element","props","startPosition","currentPosition","direction","left","offsetLeft","top","offsetTop","height","offsetHeight","width","offsetWidth","_window$getComputedSt","window","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","initialCenter","dimensions","Math","max","parseInt","displacement","absoluteCenter","this","position","_this$displacement","Object","slicedToArray","x","y","style","transform","concat","willChange","zIndex","transition","classList","add","dragClassName","raised","_moveIntoPlace","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","console","log","abrupt","requestAnimationFrame","stop","_x","_x2","apply","arguments","_settleIntoPlace","_callee2","_context2","remove","release","_release","_callee3","_context3","_x3","_x4","elementCache","elements","i","length","push","translateY","get","index","count","removeAt","splice","resetStyles","forEach","print","table","map","item","innerText","Handler","container","draggable","draggableIndex","placeholderIndex","rafId","isHolding","children","Array","from","ElementCache","_grasp","indexOf","setTimeout","undefined","move","prevent","repeatUntilNextTouchMove","_getScrollValue","containerRect","getBoundingClientRect","targetRect","bottomOffset","min","bottom","innerHeight","topOffset","maxScrollTop","scrollHeight","clientHeight","offset","scrollTop","getScrollValue","_getScrollValue2","scrollOffset","_draggable","_draggable$absoluteCe","centerY","shift","cancelAnimationFrame","touches","clientX","clientY","_ref2","_ref2$translateY","oldIndex","newIndex","clearTimeout","Sortable","useEffect","containerRef","current","useRef","_onTouchEnd","result","sent","onDrop","react_default","createElement","className","ref","onTouchStart","onGrasp","onTouchMove","Drag","onDrag","onTouchEnd","onContextMenu","defaultProps","generateItems","toConsumableArray","keys","k","actions","reverse","arr","items","slice","shuffle","random","sort","b","_ref3","removeFrom","insertAt","isNaN","Number","_arr","App","state","_ref4","_this","setState","key","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d488c68d.chunk.js","sourcesContent":["export const preventDefault = e => e.preventDefault();\r\n\r\nexport const fireAndForget = (target, eventName) => new Promise((resolve, reject) => {\r\n    const handler = ({ target }) => {\r\n        target.removeEventListener(eventName, handler, false);\r\n        resolve();\r\n    }\r\n    target.addEventListener(eventName, handler, false);\r\n})\r\n","import './Draggable.css';\r\nimport { fireAndForget } from './events';\r\n\r\nconst transitions = {\r\n    grasp: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out',\r\n    moveIntoPlace: 'transform .2s ease-in-out',\r\n    settleIntoPlace: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out'\r\n}\r\n\r\nexport default function Draggable(element, props) {\r\n\r\n    let startPosition = null;\r\n    let currentPosition = null;\r\n    let direction = null;\r\n\r\n    const { offsetLeft: left, offsetTop: top, offsetHeight: height, offsetWidth: width } = element;\r\n    const { marginTop, marginBottom, marginLeft, marginRight } = window.getComputedStyle(element);\r\n\r\n    const initialCenter = [left + width / 2, top + height / 2];\r\n    const dimensions = {\r\n        width: width + Math.max(parseInt(marginLeft), parseInt(marginRight)),\r\n        height: height + Math.max(parseInt(marginTop), parseInt(marginBottom)),\r\n    }\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get direction() { return direction },\r\n\r\n        get displacement() {\r\n            return [\r\n                currentPosition[0] - startPosition[0],\r\n                currentPosition[1] - startPosition[1],\r\n            ]\r\n        },\r\n\r\n        get dimensions() { return dimensions },\r\n\r\n        get absoluteCenter() {\r\n            return [initialCenter[0] + this.displacement[0], initialCenter[1] + this.displacement[1]];\r\n        },\r\n\r\n        // get absoluteCenter() {\r\n        //     const { left, top, height, width } = element.getBoundingClientRect();\r\n        //     return [left + width / 2, top + height / 2];\r\n        //     // return [element.offsetLeft + this.dimensions.width / 2, element.offsetTop + this.dimensions.height / 2];\r\n        // },\r\n\r\n        set position(position) {\r\n            if (currentPosition) {\r\n                if (position[1] < currentPosition[1])\r\n                    direction = 'up';\r\n                else\r\n                    direction = 'down';\r\n            }\r\n            currentPosition = position;\r\n            if (!startPosition)\r\n                startPosition = currentPosition;\r\n            const [x, y] = this.displacement;\r\n            element.style.transform = `translate(${x}px,${y}px)`;\r\n        },\r\n\r\n        get position() { return currentPosition },\r\n\r\n        grasp() {\r\n            element.style.willChange = 'transform';\r\n            element.style.zIndex = 999;\r\n            // element.style.pointerEvents = 'none';\r\n            element.style.position = 'relative';\r\n            element.style.transition = transitions.grasp;\r\n            element.classList.add(props.dragClassName);\r\n            props.raised && element.classList.add('shadow');\r\n        },\r\n\r\n        async moveIntoPlace(x, y) {\r\n            console.log(element.style.transform, element.style.transition);\r\n            element.style.transition = '';\r\n            element.style.transform = '';\r\n            console.log(element.style.transform, element.style.transition);\r\n            if (currentPosition === startPosition)\r\n                return Promise.resolve();\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.style.transition = transitions.moveIntoPlace;\r\n                element.style.transform = `translate(0px,${y - element.offsetTop}px)`;\r\n                console.log(element.style.transform, element.style.transition);\r\n            });\r\n            await event;\r\n            return event;\r\n        },\r\n\r\n        async settleIntoPlace() {\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.classList.remove(props.dragClassName);\r\n                element.classList.remove('shadow');\r\n                element.style.transition = transitions.settleIntoPlace;\r\n            });\r\n            await event;\r\n        },\r\n\r\n        async release(x, y) {\r\n            await this.moveIntoPlace(x, y);\r\n            await this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n        }\r\n    }\r\n}\r\n","export default function elementCache(elements) {\r\n\r\n    const elementCache = [];\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        elementCache.push({ element, top: element.offsetTop, height: element.offsetHeight, translateY: 0 });\r\n    }\r\n\r\n    return {\r\n\r\n        get: index => elementCache[index],\r\n\r\n        get count() { return elementCache.length },\r\n\r\n        removeAt(index) { elementCache.splice(index, 1) },\r\n\r\n        resetStyles() {\r\n            elementCache.forEach(({ element }) => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n        },\r\n\r\n        print() {\r\n            console.table(elementCache.map(element => {\r\n                const { element: { innerText: item }, top, translateY } = element;\r\n                return { item, top, translateY }\r\n            }));\r\n        }\r\n    }\r\n\r\n}","import Draggable from './Draggable';\r\nimport ElementCache from './ElementCache';\r\nimport { preventDefault } from './events';\r\n\r\nexport default function (container, props) {\r\n\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    const children = Array.from(container.children);\r\n    let elementCache = new ElementCache(children);\r\n    let rafId;\r\n    let isHolding;\r\n\r\n    return {\r\n\r\n        async grasp(e) {\r\n\r\n            if (e.target === container || draggable) return;\r\n\r\n            draggable = new Draggable(e.target, props);\r\n\r\n            draggableIndex = children.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elementCache.removeAt(draggableIndex);\r\n\r\n            isHolding = setTimeout(() => {\r\n                isHolding = undefined;\r\n                disableScrolling();\r\n                draggable.grasp();\r\n            }, 300);\r\n\r\n        },\r\n\r\n        move(e) {\r\n\r\n            if (prevent()) return;\r\n\r\n            rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            const [x, y] = [e.touches[0].clientX, e.touches[0].clientY];\r\n\r\n            // Allows auto scroll to continue when draggable is held in same place\r\n            function repeatUntilNextTouchMove() {\r\n\r\n                const [scrollTop, scrollOffset] = getScrollValue();\r\n                container.scrollTop = scrollTop;\r\n                draggable.position = [x, y + scrollTop];\r\n\r\n                const { direction, dimensions: { height }, absoluteCenter: [, centerY] } = draggable;\r\n\r\n                if (direction === 'down') {\r\n                    for (placeholderIndex; placeholderIndex < elementCache.count; placeholderIndex++) {\r\n                        const element = elementCache.get(placeholderIndex);\r\n                        if (element.top > centerY) break;\r\n                        element.top -= height;\r\n                        element.translateY -= height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n                else if (direction === 'up') {\r\n                    for (placeholderIndex; placeholderIndex > 0; placeholderIndex--) {\r\n                        const element = elementCache.get(placeholderIndex - 1);\r\n                        const bottom = element.top + element.height;\r\n                        if (bottom < centerY) break;\r\n                        element.top += height;\r\n                        element.translateY += height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n\r\n                if (placeholderIndex <= 0 || placeholderIndex >= elementCache.count || scrollOffset === 0)\r\n                    cancelAnimationFrame(rafId);\r\n                else\r\n                    rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            }\r\n\r\n            function shift({ element, translateY = 0 }) {\r\n                // element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${translateY}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        async release(e) {\r\n\r\n            if (prevent()) return {};\r\n\r\n            enableScrolling();\r\n\r\n            await draggable.release(0, container.children[placeholderIndex].offsetTop);\r\n\r\n            elementCache.resetStyles();\r\n\r\n            draggable = undefined;\r\n\r\n            return { oldIndex: draggableIndex, newIndex: placeholderIndex }\r\n        }\r\n    }\r\n\r\n    function disableScrolling() {\r\n        container.addEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function enableScrolling() {\r\n        container.removeEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function prevent() {\r\n\r\n        if (isHolding) {\r\n            clearTimeout(isHolding);\r\n            isHolding = undefined;\r\n            draggable = undefined;\r\n        }\r\n\r\n        if (!draggable) return true;\r\n\r\n        cancelAnimationFrame(rafId);\r\n\r\n        return false;\r\n    }\r\n\r\n    function getScrollValue() {\r\n\r\n        // let scrollContainer = draggable.element.parentNode;\r\n        // while (scrollContainer) {\r\n        //     if (scrollContainer === document.body) break;\r\n        //     if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n        //     scrollContainer = scrollContainer.parentNode;\r\n        // }\r\n        // scrollContainer = scrollContainer || document.body;\r\n\r\n        const triggerOffset = 80;\r\n        const speedMultiplier = 0.25;\r\n\r\n        const containerRect = container.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(containerRect.top, 0);\r\n        const maxScrollTop = container.scrollHeight - Math.min(container.clientHeight, window.innerHeight);\r\n\r\n        let offset = 0;\r\n        if (bottomOffset < triggerOffset)\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        else if (topOffset < triggerOffset)\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n\r\n        const top = Math.max(0, Math.min(maxScrollTop, container.scrollTop + offset * speedMultiplier));\r\n\r\n        return [top, offset];\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    useEffect(() => {\r\n        handler = new Handler(containerRef.current, props);\r\n    });\r\n\r\n    const containerRef = useRef();\r\n\r\n    let handler;\r\n\r\n    function onTouchStart(e) {\r\n        // e.stopPropagation();\r\n        handler.grasp(e);\r\n        props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n        // e.stopPropagation();\r\n        handler.move(e);\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    async function onTouchEnd(e) {\r\n        // e.stopPropagation();\r\n        const result = await handler.release(e);\r\n        props.onDrop && props.onDrop(result)\r\n    }\r\n\r\n    return <div\r\n        className='container'\r\n        ref={containerRef}\r\n        onTouchStart={onTouchStart}\r\n        onTouchMove={onTouchMove}\r\n        onTouchEnd={onTouchEnd}\r\n        onContextMenu={preventDefault}\r\n    >\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move, shuffle, reverse } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nconst actions = {\r\n    reverse: ({ items }) => ({ items: reverse(items) }),\r\n    shuffle: ({ items }) => ({ items: shuffle(items) }),\r\n    move: (oldIndex, newIndex) => ({ items }) => ({ items: move(items, oldIndex, newIndex) }),\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n    state = { items: generateItems(80) }\r\n\r\n    onDrop = ({ oldIndex, newIndex }) => this.setState(actions.move(oldIndex, newIndex))\r\n\r\n    render() {\r\n        return <div className='list'>\r\n            <Sortable dragClassName='drag-style' onDrop={this.onDrop}>\r\n                {this.state.items.map(item =>\r\n                    <div key={item} className='list-item'>{item}</div>)\r\n                }\r\n            </Sortable>\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}