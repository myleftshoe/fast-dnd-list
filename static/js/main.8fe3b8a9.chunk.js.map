{"version":3,"sources":["events.js","Draggable.js","ElementCache.js","Container.js","TouchSimulator (unused).js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","transitions","grasp","moveIntoPlace","settleIntoPlace","Draggable","element","props","startPosition","currentPosition","direction","left","offsetLeft","top","offsetTop","height","offsetHeight","width","offsetWidth","_window$getComputedSt","window","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","initialCenter","dimensions","Math","max","parseInt","displacement","absoluteCenter","this","margins","bottom","right","position","_this$displacement","Object","slicedToArray","x","y","style","transform","concat","willChange","zIndex","transition","classList","add","dragClassName","raised","_this","Promise","resolve","_element$getBoundingC","getBoundingClientRect","keyframes","animate","duration","easing","onfinish","target","eventName","event","reject","addEventListener","handler","_ref","removeEventListener","requestAnimationFrame","remove","release","_release","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","stop","_x","_x2","apply","arguments","elementCache","elements","i","length","push","translateY","get","index","count","removeAt","splice","resetStyles","forEach","print","console","table","map","item","innerText","Container","geometry","touchStartOn","el","undefined","document","createEvent","initTouchEvent","_unused","initUIEvent","_unused2","initEvent","touches","clientX","clientY","isDummy","dispatchEvent","Handler","containerElement","draggable","draggableIndex","placeholderIndex","rafId","isHolding","container","scrollable","parentNode","children","Array","from","ElementCache","_grasp","abrupt","indexOf","contains","move","setTimeout","overflowY","shift","_ref2","_ref2$translateY","prevent","repeatUntilNextTouchMove","_getScrollValue","scrollableRect","targetRect","bottomOffset","min","innerHeight","topOffset","maxScrollTop","scrollHeight","clientHeight","offset","scrollTop","getScrollValue","_getScrollValue2","scrollOffset","_draggable","_draggable$absoluteCe","centerY","cancelAnimationFrame","oldIndex","newIndex","drop","unequalHeightAdjustment","clearTimeout","Sortable","useEffect","containerRef","current","useRef","react_default","createElement","className","ref","onTouchStart","onGrasp","onTouchMove","Drag","onDrag","onTouchEnd","result","onDrop","onContextMenu","defaultProps","arr","removeFrom","insertAt","isNaN","Number","_arr","toConsumableArray","generateItems","keys","k","ReactDOM","render","_useState","useState","_useState2","items","setItems","key","getElementById"],"mappings":"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","file":"static/js/main.8fe3b8a9.chunk.js","sourcesContent":["export function preventDefault(e) { e.preventDefault() }\r\nexport function stopPropagation(e) { e.stopPropagation() }\r\n\r\nexport function fireAndForget(target, eventName) {\r\n    return new Promise((resolve, reject) => {\r\n        const handler = ({ target }) => {\r\n            target.removeEventListener(eventName, handler, false);\r\n            resolve();\r\n        }\r\n        target.addEventListener(eventName, handler, false);\r\n    })\r\n}\r\n","import './Draggable.css';\r\nimport { fireAndForget } from './events';\r\nimport 'web-animations-js/web-animations.min';\r\n\r\nconst transitions = {\r\n    grasp: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out',\r\n    moveIntoPlace: 'transform .2s ease-in-out',\r\n    settleIntoPlace: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out'\r\n}\r\n\r\nexport default function Draggable(element, props) {\r\n\r\n    let startPosition = null;\r\n    let currentPosition = null;\r\n    let direction = null;\r\n\r\n    const { offsetLeft: left, offsetTop: top, offsetHeight: height, offsetWidth: width } = element;\r\n    const { marginTop, marginBottom, marginLeft, marginRight } = window.getComputedStyle(element);\r\n\r\n    const initialCenter = [left + width / 2, top + height / 2];\r\n    const dimensions = {\r\n        width: width + Math.max(parseInt(marginLeft), parseInt(marginRight)),\r\n        height: height + Math.max(parseInt(marginTop), parseInt(marginBottom)),\r\n    }\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get direction() { return direction },\r\n\r\n        get displacement() {\r\n            return [\r\n                currentPosition[0] - startPosition[0],\r\n                currentPosition[1] - startPosition[1],\r\n            ]\r\n        },\r\n\r\n        get dimensions() { return dimensions },\r\n\r\n        get absoluteCenter() {\r\n            return [initialCenter[0] + this.displacement[0], initialCenter[1] + this.displacement[1]];\r\n        },\r\n\r\n        get margins() {\r\n            return {\r\n                top: parseInt(marginTop),\r\n                bottom: parseInt(marginBottom),\r\n                left: parseInt(marginLeft),\r\n                right: parseInt(marginRight),\r\n            }\r\n        },\r\n        // get absoluteCenter() {\r\n        //     const { left, top, height, width } = element.getBoundingClientRect();\r\n        //     return [left + width / 2, top + height / 2];\r\n        //     // return [element.offsetLeft + this.dimensions.width / 2, element.offsetTop + this.dimensions.height / 2];\r\n        // },\r\n\r\n        set position(position) {\r\n            if (currentPosition) {\r\n                if (position[1] < currentPosition[1])\r\n                    direction = 'up';\r\n                else\r\n                    direction = 'down';\r\n            }\r\n            currentPosition = position;\r\n            if (!startPosition)\r\n                startPosition = currentPosition;\r\n            const [x, y] = this.displacement;\r\n            element.style.transform = `translate(${x}px,${y}px)`;\r\n        },\r\n\r\n        get position() { return currentPosition },\r\n\r\n        grasp() {\r\n            element.style.willChange = 'transform';\r\n            element.style.zIndex = 999;\r\n            // element.style.pointerEvents = 'none';\r\n            element.style.position = 'relative';\r\n            element.style.transition = transitions.grasp;\r\n            element.classList.add(props.dragClassName);\r\n            props.raised && element.classList.add('shadow');\r\n        },\r\n\r\n        moveIntoPlace(x, y) {\r\n            return new Promise(resolve => {\r\n                const { left, top } = element.getBoundingClientRect();\r\n                const keyframes = [\r\n                    { transform: `translate(${left - x - this.margins.left}px,${top - y}px)` },\r\n                    { transform: `translate(${0}px,${0}px)` },\r\n                ];\r\n                const animation = element.animate(keyframes, {\r\n                    duration: 200,\r\n                    easing: 'ease-in-out',\r\n                });\r\n                animation.onfinish = () => {\r\n                    element.style.transition = null;\r\n                    element.style.transform = `translate(${0}px,${0}px)`;\r\n                    resolve();\r\n                }\r\n            });\r\n            // Not supported in Chrome yet: (polyfill available but above Promise is simpler)\r\n            // return animation.finished;\r\n        },\r\n\r\n        settleIntoPlace() {\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.classList.remove(props.dragClassName);\r\n                element.classList.remove('shadow');\r\n                element.style.transition = transitions.settleIntoPlace;\r\n            });\r\n            return event;\r\n        },\r\n\r\n        async release(x, y) {\r\n            await this.moveIntoPlace(x, y);\r\n            await this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n        }\r\n    }\r\n}\r\n","export default function elementCache(elements) {\r\n\r\n    const elementCache = [];\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        elementCache.push({ element, top: element.offsetTop, height: element.offsetHeight, translateY: 0 });\r\n    }\r\n\r\n    return {\r\n\r\n        get: index => elementCache[index],\r\n\r\n        get count() { return elementCache.length },\r\n\r\n        removeAt(index) { elementCache.splice(index, 1) },\r\n\r\n        resetStyles() {\r\n            elementCache.forEach(({ element }) => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n        },\r\n\r\n        print() {\r\n            console.table(elementCache.map(element => {\r\n                const { element: { innerText: item }, top, translateY } = element;\r\n                return { item, top, translateY }\r\n            }));\r\n        }\r\n    }\r\n\r\n}","export default function Container(element) {\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get geometry() {\r\n            return {\r\n                left: element.offsetLeft,\r\n                top: element.offsetTop,\r\n                right: element.offsetLeft + element.offsetWidth,\r\n                bottom: element.offsetTop + element.offsetHeight,\r\n                height: element.offsetHeight,\r\n                width: element.offsetWidth,\r\n            }\r\n        }\r\n    }\r\n}\r\n","export const touchStartOn = (el, x = 0, y = 0) => {\r\n    let e;\r\n    try {\r\n        e = document.createEvent('TouchEvent')\r\n        e.initTouchEvent(\"touchstart\", true, true)\r\n    }\r\n    catch {\r\n        try {\r\n            e = document.createEvent('UIEvent')\r\n            e.initUIEvent(\"touchstart\", true, true)\r\n        }\r\n        catch {\r\n            e = document.createEvent('Event')\r\n            e.initEvent(\"touchstart\", true, true)\r\n        }\r\n    }\r\n    e.touches = [{\r\n        clientX: x,\r\n        clientY: y\r\n    }];\r\n    // e.prototype.addProperty()\r\n    e.isDummy = true;\r\n    el.dispatchEvent(e)\r\n}\r\n\r\nconst touchEndOn = (el, x = 0, y = 0) => {\r\n    let e;\r\n    try {\r\n        e = document.createEvent('TouchEvent')\r\n        e.initTouchEvent(\"touchend\", true, true)\r\n    }\r\n    catch {\r\n        try {\r\n            e = document.createEvent('UIEvent')\r\n            e.initUIEvent(\"touchend\", true, true)\r\n        }\r\n        catch {\r\n            e = document.createEvent('Event')\r\n            e.initEvent(\"touchend\", true, true)\r\n        }\r\n    }\r\n    e.touches = [{\r\n        clientX: x,\r\n        clientY: y\r\n    }];\r\n    e.isDummy = true;\r\n    el.dispatchEvent(e)\r\n}","import Draggable from './Draggable';\r\nimport ElementCache from './ElementCache';\r\n// import { preventDefault } from './events';\r\nimport Container from './Container';\r\nimport { touchStartOn } from './TouchSimulator (unused)';\r\n\r\nexport default function (containerElement, props) {\r\n\r\n    const container = new Container(containerElement);\r\n    const scrollable = container.element.parentNode;\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    const children = Array.from(container.element.children);\r\n    let elementCache = new ElementCache(children);\r\n    let rafId;\r\n    let isHolding;\r\n\r\n    return {\r\n\r\n        async grasp(e) {\r\n\r\n            if (e.target === container.element) return;\r\n\r\n\r\n            const [x, y] = [e.touches[0].clientX, e.touches[0].clientY];\r\n\r\n            draggable = new Draggable(e.target, props);\r\n\r\n            draggableIndex = children.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elementCache.removeAt(draggableIndex);\r\n\r\n            if (e.target.classList.contains('drag-style')) {\r\n                touchStartOn(e.target, x, y);\r\n                this.move(x, y);\r\n                return;\r\n            }\r\n\r\n\r\n            isHolding = setTimeout(() => {\r\n                isHolding = undefined;\r\n                disableScrolling();\r\n                draggable.grasp();\r\n            }, 300);\r\n\r\n        },\r\n\r\n        move(x, y) {\r\n\r\n            if (prevent()) return;\r\n\r\n            rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            // Allows auto scroll to continue when draggable is held in same place\r\n            function repeatUntilNextTouchMove() {\r\n\r\n                const [scrollTop, scrollOffset] = getScrollValue();\r\n                scrollable.scrollTop = scrollTop;\r\n                draggable.position = [x, y + scrollTop];\r\n\r\n                const { direction, dimensions: { height }, absoluteCenter: [centerX, centerY] } = draggable;\r\n\r\n                // if (centerX > container.geometry.right || centerX < container.geometry.left) {\r\n                //     rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n                //     return;\r\n                // }\r\n\r\n\r\n                if (direction === 'down') {\r\n                    for (placeholderIndex; placeholderIndex < elementCache.count; placeholderIndex++) {\r\n                        const element = elementCache.get(placeholderIndex);\r\n                        if (element.top > centerY) break;\r\n                        element.top -= height;\r\n                        element.translateY -= height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n                else if (direction === 'up') {\r\n                    for (placeholderIndex; placeholderIndex > 0; placeholderIndex--) {\r\n                        const element = elementCache.get(placeholderIndex - 1);\r\n                        const bottom = element.top + element.height;\r\n                        if (bottom < centerY) break;\r\n                        element.top += height;\r\n                        element.translateY += height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n\r\n                if (placeholderIndex <= 0 || placeholderIndex >= elementCache.count || scrollOffset === 0)\r\n                    cancelAnimationFrame(rafId);\r\n                else\r\n                    rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            }\r\n\r\n            function shift({ element, translateY = 0 }) {\r\n                // element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${translateY}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        release(e) {\r\n\r\n            if (prevent()) return {};\r\n\r\n            enableScrolling();\r\n            elementCache.resetStyles();\r\n\r\n            return { oldIndex: draggableIndex, newIndex: placeholderIndex }\r\n        },\r\n\r\n        drop() {\r\n\r\n            if (prevent()) return {};\r\n\r\n            let unequalHeightAdjustment = 0;\r\n            if (draggable.direction === 'down')\r\n                unequalHeightAdjustment = children[placeholderIndex].offsetHeight - draggable.element.offsetHeight;\r\n\r\n            draggable.release(0, children[placeholderIndex].offsetTop + unequalHeightAdjustment - scrollable.scrollTop + container.geometry.top);\r\n\r\n            draggable = undefined;\r\n        }\r\n    }\r\n\r\n    function disableScrolling() {\r\n        scrollable.style.overflowY = 'hidden';\r\n        // scrollable.addEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function enableScrolling() {\r\n        scrollable.style.overflowY = 'scroll';\r\n        // scrollable.removeEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function prevent() {\r\n\r\n        if (isHolding) {\r\n            clearTimeout(isHolding);\r\n            isHolding = undefined;\r\n            draggable = undefined;\r\n        }\r\n\r\n        if (!draggable) return true;\r\n\r\n        cancelAnimationFrame(rafId);\r\n\r\n        return false;\r\n    }\r\n\r\n    function getScrollValue() {\r\n\r\n        // let scrollContainer = draggable.element.parentNode;\r\n        // while (scrollContainer) {\r\n        //     if (scrollContainer === document.body) break;\r\n        //     if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n        //     scrollContainer = scrollContainer.parentNode;\r\n        // }\r\n        // scrollContainer = scrollContainer || document.body;\r\n\r\n        const triggerOffset = 80;\r\n        const speedMultiplier = 0.25;\r\n\r\n        const scrollableRect = scrollable.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(scrollableRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(scrollableRect.top, 0);\r\n        const maxScrollTop = scrollable.scrollHeight - Math.min(scrollable.clientHeight, window.innerHeight);\r\n\r\n        let offset = 0;\r\n        if (bottomOffset < triggerOffset)\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        else if (topOffset < triggerOffset)\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n\r\n        const top = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset * speedMultiplier));\r\n\r\n        return [top, offset];\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    useEffect(() => {\r\n        handler = new Handler(containerRef.current, props);\r\n    });\r\n\r\n    const containerRef = useRef();\r\n\r\n    let handler;\r\n\r\n    function onTouchStart(e) {\r\n        // e.stopPropagation();\r\n        handler.grasp(e);\r\n        props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n        // e.stopPropagation();\r\n        const [x, y] = [e.touches[0].clientX, e.touches[0].clientY];\r\n        handler.move(x, y);\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    function onTouchEnd(e) {\r\n        // e.stopPropagation();\r\n        const result = handler.release(e);\r\n        props.onDrop && props.onDrop(result);\r\n        handler.drop();\r\n    }\r\n\r\n    return <div style={{ overflowY: 'scroll' }}>\r\n        <div\r\n            className='container'\r\n            ref={containerRef}\r\n            onTouchStart={onTouchStart}\r\n            onTouchMove={onTouchMove}\r\n            onTouchEnd={onTouchEnd}\r\n            onContextMenu={preventDefault}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nexport default function App() {\r\n\r\n    let [items, setItems] = useState(generateItems(80));\r\n\r\n    const onDrop = ({ oldIndex, newIndex }) => setItems(move(items, oldIndex, newIndex));\r\n\r\n    return <div className='list'>\r\n        <Sortable dragClassName='drag-style' onDrop={onDrop}>\r\n            {items.map(item =>\r\n                <div key={item} className='list-item' style={{ height: item === 'Item 5' ? '70px' : item === 'Item 9' && '100px' }}>{item}</div>)\r\n            }\r\n        </Sortable>\r\n    </div>\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}