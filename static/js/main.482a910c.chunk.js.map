{"version":3,"sources":["events.js","domUtils (not used).js","Draggable.js","ElementCache.js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","fireAndForget","target","eventName","Promise","resolve","reject","addEventListener","handler","_ref","removeEventListener","getComputedTranslation","element","window","getComputedStyle","getPropertyValue","match","_ref2","Object","slicedToArray","transitions","grasp","moveIntoPlace","settleIntoPlace","Draggable","props","startPosition","currentPosition","direction","left","offsetLeft","top","offsetTop","height","offsetHeight","width","offsetWidth","_window$getComputedSt","marginTop","marginBottom","marginLeft","marginRight","initialCenter","dimensions","Math","max","parseInt","displacement","absoluteCenter","this","position","_this$displacement","x","y","style","transform","concat","willChange","zIndex","transition","classList","add","dragClassName","raised","_moveIntoPlace","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","abrupt","requestAnimationFrame","stop","_x","_x2","apply","arguments","drop","_drop","_callee2","relativeIndex","_getComputedTranslati","_getComputedTranslati2","translateX","translateY","offsetX","offsetY","_context2","setTimeout","_x3","_settleIntoPlace","_callee3","_context3","remove","release","_release","_callee4","_context4","_x4","_x5","elementCache","elements","i","length","push","get","index","count","removeAt","splice","resetStyles","forEach","print","console","table","map","item","innerText","Handler","container","draggable","draggableIndex","placeholderIndex","rafId","isHolding","children","Array","from","ElementCache","_grasp","indexOf","undefined","move","prevent","repeatUntilNextTouchMove","_getScrollValue","containerRect","getBoundingClientRect","targetRect","bottomOffset","min","bottom","innerHeight","topOffset","maxScrollTop","scrollHeight","clientHeight","offset","scrollTop","getScrollValue","_getScrollValue2","scrollOffset","_draggable","_draggable$absoluteCe","centerY","shift","cancelAnimationFrame","touches","clientX","clientY","_ref2$translateY","oldIndex","newIndex","clearTimeout","Sortable","useEffect","containerRef","current","useRef","_onTouchEnd","result","sent","onDrop","react_default","createElement","className","ref","onTouchStart","onGrasp","onTouchMove","Drag","onDrag","onTouchEnd","onContextMenu","defaultProps","arr","removeFrom","insertAt","isNaN","Number","_arr","toConsumableArray","generateItems","keys","k","ReactDOM","render","_useState","useState","_useState2","items","setItems","key","document","getElementById"],"mappings":"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","file":"static/js/main.482a910c.chunk.js","sourcesContent":["export const preventDefault = e => e.preventDefault();\r\n\r\nexport const fireAndForget = (target, eventName) => new Promise((resolve, reject) => {\r\n    const handler = ({ target }) => {\r\n        target.removeEventListener(eventName, handler, false);\r\n        resolve();\r\n    }\r\n    target.addEventListener(eventName, handler, false);\r\n})\r\n","export function getComputedTranslation(element) {\r\n    const transformMatrix = window.getComputedStyle(element).getPropertyValue('transform');\r\n    const [, , , , x, y] = transformMatrix.match(/-?\\d+/g) || [0, 0, 0, 0, 0, 0];\r\n    return [x, y]\r\n}\r\n\r\nexport function getTranslateY(element) {\r\n    return Number((element.style.transform.match(/-?\\d+/g) || [0])[1])\r\n}","import './Draggable.css';\r\nimport { fireAndForget } from './events';\r\nimport { getComputedTranslation } from './domUtils (not used)';\r\n\r\nconst transitions = {\r\n    grasp: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out',\r\n    moveIntoPlace: 'transform .2s ease-in-out',\r\n    settleIntoPlace: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out'\r\n}\r\n\r\nexport default function Draggable(element, props) {\r\n\r\n    let startPosition = null;\r\n    let currentPosition = null;\r\n    let direction = null;\r\n\r\n    const { offsetLeft: left, offsetTop: top, offsetHeight: height, offsetWidth: width } = element;\r\n    const { marginTop, marginBottom, marginLeft, marginRight } = window.getComputedStyle(element);\r\n\r\n    const initialCenter = [left + width / 2, top + height / 2];\r\n    const dimensions = {\r\n        width: width + Math.max(parseInt(marginLeft), parseInt(marginRight)),\r\n        height: height + Math.max(parseInt(marginTop), parseInt(marginBottom)),\r\n    }\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get direction() { return direction },\r\n\r\n        get displacement() {\r\n            return [\r\n                currentPosition[0] - startPosition[0],\r\n                currentPosition[1] - startPosition[1],\r\n            ]\r\n        },\r\n\r\n        get dimensions() { return dimensions },\r\n\r\n        get absoluteCenter() {\r\n            return [initialCenter[0] + this.displacement[0], initialCenter[1] + this.displacement[1]];\r\n        },\r\n\r\n        // get absoluteCenter() {\r\n        //     const { left, top, height, width } = element.getBoundingClientRect();\r\n        //     return [left + width / 2, top + height / 2];\r\n        //     // return [element.offsetLeft + this.dimensions.width / 2, element.offsetTop + this.dimensions.height / 2];\r\n        // },\r\n\r\n        set position(position) {\r\n            if (currentPosition) {\r\n                if (position[1] < currentPosition[1])\r\n                    direction = 'up';\r\n                else\r\n                    direction = 'down';\r\n            }\r\n            currentPosition = position;\r\n            if (!startPosition)\r\n                startPosition = currentPosition;\r\n            const [x, y] = this.displacement;\r\n            element.style.transform = `translate(${x}px,${y}px)`;\r\n        },\r\n\r\n        get position() { return currentPosition },\r\n\r\n        grasp() {\r\n            element.style.willChange = 'transform';\r\n            element.style.zIndex = 999;\r\n            // element.style.pointerEvents = 'none';\r\n            element.style.position = 'relative';\r\n            element.style.transition = transitions.grasp;\r\n            element.classList.add(props.dragClassName);\r\n            props.raised && element.classList.add('shadow');\r\n        },\r\n\r\n        async moveIntoPlace(x, y) {\r\n            if (currentPosition === startPosition)\r\n                return Promise.resolve();\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            requestAnimationFrame(() => {\r\n                element.style.transition = transitions.moveIntoPlace;\r\n                element.style.transform = `translate(0px,${1}px)`;\r\n            });\r\n            await event;\r\n            return event;\r\n        },\r\n\r\n\r\n        async drop(relativeIndex) {\r\n\r\n            const event = fireAndForget(element, \"transitionend\");\r\n\r\n            const [translateX, translateY] = getComputedTranslation(element);\r\n            const [offsetX, offsetY] = [translateX, translateY - this.dimensions.height * relativeIndex];\r\n\r\n            // By now item has moved to new location. Translate instantly to new position maintaining drag offset\r\n            requestAnimationFrame(() => {\r\n                element.style.transform = `translate(${offsetX}px,${offsetY}px)`;\r\n                setTimeout(() => {\r\n                    element.style.transition = transitions.moveIntoPlace;\r\n                    element.style.transform = `translate(0px,${1}px)`;\r\n                });\r\n            }, 0);\r\n            // this.moveIntoPlace();\r\n            await event;\r\n            this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n            return event;\r\n        },\r\n\r\n\r\n\r\n        async settleIntoPlace() {\r\n            // const event = fireAndForget(element, \"transitionend\");\r\n            // requestAnimationFrame(() => {\r\n            element.classList.remove(props.dragClassName);\r\n            element.classList.remove('shadow');\r\n            element.style.transition = transitions.settleIntoPlace;\r\n            // });\r\n            // return event;\r\n        },\r\n\r\n        async release(x, y) {\r\n            await this.moveIntoPlace(x, y);\r\n            await this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n        }\r\n    }\r\n}\r\n","export default function elementCache(elements) {\r\n\r\n    const elementCache = [];\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        elementCache.push({ element, top: element.offsetTop, height: element.offsetHeight, translateY: 0 });\r\n    }\r\n\r\n    return {\r\n\r\n        get: index => elementCache[index],\r\n\r\n        get count() { return elementCache.length },\r\n\r\n        removeAt(index) { elementCache.splice(index, 1) },\r\n\r\n        resetStyles() {\r\n            elementCache.forEach(({ element }) => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n        },\r\n\r\n        print() {\r\n            console.table(elementCache.map(element => {\r\n                const { element: { innerText: item }, top, translateY } = element;\r\n                return { item, top, translateY }\r\n            }));\r\n        }\r\n    }\r\n\r\n}","import Draggable from './Draggable';\r\nimport ElementCache from './ElementCache';\r\nimport { preventDefault } from './events';\r\n\r\nexport default function (container, props) {\r\n\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    const children = Array.from(container.children);\r\n    let elementCache = new ElementCache(children);\r\n    let rafId;\r\n    let isHolding;\r\n\r\n    return {\r\n\r\n        async grasp(e) {\r\n\r\n            if (e.target === container || draggable) return;\r\n\r\n            draggable = new Draggable(e.target, props);\r\n\r\n            draggableIndex = children.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elementCache.removeAt(draggableIndex);\r\n\r\n            isHolding = setTimeout(() => {\r\n                isHolding = undefined;\r\n                disableScrolling();\r\n                draggable.grasp();\r\n            }, 300);\r\n\r\n        },\r\n\r\n        move(e) {\r\n\r\n            if (prevent()) return;\r\n\r\n            rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            const [x, y] = [e.touches[0].clientX, e.touches[0].clientY];\r\n\r\n            // Allows auto scroll to continue when draggable is held in same place\r\n            function repeatUntilNextTouchMove() {\r\n\r\n                const [scrollTop, scrollOffset] = getScrollValue();\r\n                container.scrollTop = scrollTop;\r\n                draggable.position = [x, y + scrollTop];\r\n\r\n                const { direction, dimensions: { height }, absoluteCenter: [, centerY] } = draggable;\r\n\r\n                if (direction === 'down') {\r\n                    for (placeholderIndex; placeholderIndex < elementCache.count; placeholderIndex++) {\r\n                        const element = elementCache.get(placeholderIndex);\r\n                        if (element.top > centerY) break;\r\n                        element.top -= height;\r\n                        element.translateY -= height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n                else if (direction === 'up') {\r\n                    for (placeholderIndex; placeholderIndex > 0; placeholderIndex--) {\r\n                        const element = elementCache.get(placeholderIndex - 1);\r\n                        const bottom = element.top + element.height;\r\n                        if (bottom < centerY) break;\r\n                        element.top += height;\r\n                        element.translateY += height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n\r\n                if (placeholderIndex <= 0 || placeholderIndex >= elementCache.count || scrollOffset === 0)\r\n                    cancelAnimationFrame(rafId);\r\n                else\r\n                    rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            }\r\n\r\n            function shift({ element, translateY = 0 }) {\r\n                // element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${translateY}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        release(e) {\r\n\r\n            if (prevent()) return {};\r\n\r\n            enableScrolling();\r\n\r\n            // await draggable.release(0, container.children[placeholderIndex].offsetTop);\r\n            draggable.drop(placeholderIndex - draggableIndex);\r\n\r\n            elementCache.resetStyles();\r\n\r\n            draggable = undefined;\r\n\r\n            return { oldIndex: draggableIndex, newIndex: placeholderIndex }\r\n        }\r\n    }\r\n\r\n    function disableScrolling() {\r\n        container.addEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function enableScrolling() {\r\n        container.removeEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function prevent() {\r\n\r\n        if (isHolding) {\r\n            clearTimeout(isHolding);\r\n            isHolding = undefined;\r\n            draggable = undefined;\r\n        }\r\n\r\n        if (!draggable) return true;\r\n\r\n        cancelAnimationFrame(rafId);\r\n\r\n        return false;\r\n    }\r\n\r\n    function getScrollValue() {\r\n\r\n        // let scrollContainer = draggable.element.parentNode;\r\n        // while (scrollContainer) {\r\n        //     if (scrollContainer === document.body) break;\r\n        //     if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n        //     scrollContainer = scrollContainer.parentNode;\r\n        // }\r\n        // scrollContainer = scrollContainer || document.body;\r\n\r\n        const triggerOffset = 80;\r\n        const speedMultiplier = 0.25;\r\n\r\n        const containerRect = container.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(containerRect.top, 0);\r\n        const maxScrollTop = container.scrollHeight - Math.min(container.clientHeight, window.innerHeight);\r\n\r\n        let offset = 0;\r\n        if (bottomOffset < triggerOffset)\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        else if (topOffset < triggerOffset)\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n\r\n        const top = Math.max(0, Math.min(maxScrollTop, container.scrollTop + offset * speedMultiplier));\r\n\r\n        return [top, offset];\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    useEffect(() => {\r\n        handler = new Handler(containerRef.current, props);\r\n    });\r\n\r\n    const containerRef = useRef();\r\n\r\n    let handler;\r\n\r\n    function onTouchStart(e) {\r\n        // e.stopPropagation();\r\n        handler.grasp(e);\r\n        props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n        // e.stopPropagation();\r\n        handler.move(e);\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    async function onTouchEnd(e) {\r\n        // e.stopPropagation();\r\n        const result = await handler.release(e);\r\n        props.onDrop && props.onDrop(result)\r\n    }\r\n\r\n    return <div\r\n        className='container'\r\n        ref={containerRef}\r\n        onTouchStart={onTouchStart}\r\n        onTouchMove={onTouchMove}\r\n        onTouchEnd={onTouchEnd}\r\n        onContextMenu={preventDefault}\r\n    >\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nexport default function App() {\r\n\r\n    let [items, setItems] = useState(generateItems(80));\r\n\r\n    const onDrop = ({ oldIndex, newIndex }) => setItems(move(items, oldIndex, newIndex));\r\n\r\n    return <div className='list'>\r\n        <Sortable dragClassName='drag-style' onDrop={onDrop}>\r\n            {items.map(item =>\r\n                <div key={item} className='list-item'>{item}</div>)\r\n            }\r\n        </Sortable>\r\n    </div>\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}