{"version":3,"sources":["events.js","Draggable.js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","fireAndForget","target","eventName","Promise","resolve","reject","addEventListener","handler","_ref","removeEventListener","transitions","grasp","moveIntoPlace","settleIntoPlace","Draggable","element","props","startPosition","currentPosition","direction","initialCenter","displacement","dimensions","_window$getComputedSt","window","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","width","offsetWidth","Math","max","parseInt","height","offsetHeight","currentCenter","console","log","this","absoluteCenter","_element$getBoundingC","getBoundingClientRect","left","top","position","offsetLeft","offsetTop","_this$displacement","Object","slicedToArray","x","y","style","transform","concat","willChange","zIndex","transition","classList","add","dragClassName","raised","_moveIntoPlace","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","abrupt","stop","_x","_x2","apply","arguments","_settleIntoPlace","_callee2","_context2","remove","release","_release","_callee3","_context3","_x3","_x4","Handler","container","draggable","draggableIndex","placeholderIndex","elements","elementCacheAsArr","Array","prototype","slice","call","children","indexOf","splice","count","length","i","push","translateY","populateElementCache","table","move","touches","clientX","clientY","requestAnimationFrame","handleMove","_draggable","translate","_ref$translateY","oldIndex","newIndex","forEach","Sortable","useEffect","containerRef","current","useRef","_onTouchEnd","result","stopPropagation","sent","onDrop","react_default","createElement","className","ref","onTouchStart","onGrasp","onTouchMove","Drag","onDrag","onTouchEnd","onContextMenu","defaultProps","generateItems","toConsumableArray","keys","map","k","actions","reverse","arr","items","shuffle","_ref2","random","sort","b","_ref3","removeFrom","undefined","insertAt","isNaN","Number","_arr","item","App","state","_ref4","_this","setState","key","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2a4c1695.chunk.js","sourcesContent":["export const preventDefault = e => e.preventDefault();\r\n\r\nexport const fireAndForget = (target, eventName) => new Promise((resolve, reject) => {\r\n    const handler = ({ target }) => {\r\n        target.removeEventListener(eventName, handler, false);\r\n        resolve();\r\n    }\r\n    target.addEventListener(eventName, handler, false);\r\n})\r\n","import './Draggable.css';\r\nimport { fireAndForget } from './events';\r\n\r\nconst transitions = {\r\n    grasp: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out',\r\n    moveIntoPlace: 'transform .2s ease-in-out',\r\n    settleIntoPlace: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out'\r\n}\r\n\r\nexport default function Draggable(element, props) {\r\n\r\n    let startPosition = null;\r\n    let currentPosition = null;\r\n    let direction = null;\r\n    let initialCenter = null;\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get direction() { return direction },\r\n\r\n        get displacement() {\r\n            return [\r\n                currentPosition[0] - startPosition[0],\r\n                currentPosition[1] - startPosition[1],\r\n            ]\r\n        },\r\n\r\n        get dimensions() {\r\n            const { marginTop, marginBottom, marginLeft, marginRight } = window.getComputedStyle(element);\r\n            return {\r\n                width: element.offsetWidth + Math.max(parseInt(marginLeft), parseInt(marginRight)),\r\n                height: element.offsetHeight + Math.max(parseInt(marginTop), parseInt(marginBottom)),\r\n            }\r\n        },\r\n\r\n        get initialCenter() {\r\n            return initialCenter;\r\n        },\r\n\r\n        get currentCenter() {\r\n            console.log(initialCenter[1], this.displacement[1])\r\n            return [initialCenter[0] + this.displacement[0], initialCenter[1] + this.displacement[1]];\r\n        },\r\n\r\n        get absoluteCenter() {\r\n            const { left, top, height, width } = element.getBoundingClientRect();\r\n            return [left + width / 2, top + height / 2];\r\n            // return [element.offsetLeft + this.dimensions.width / 2, element.offsetTop + this.dimensions.height / 2];\r\n        },\r\n\r\n        set position(position) {\r\n            if (currentPosition) {\r\n                if (position[1] < currentPosition[1])\r\n                    direction = 'up';\r\n                else\r\n                    direction = 'down';\r\n            }\r\n            currentPosition = position;\r\n            if (!startPosition) {\r\n                startPosition = currentPosition;\r\n                const { offsetLeft: left, offsetTop: top, offsetHeight: height, offsetWidth: width } = element;\r\n                initialCenter = [left + width / 2, top + height / 2];\r\n            }\r\n            const [x, y] = this.displacement;\r\n            element.style.transform = `translate(${x}px,${y}px)`;\r\n        },\r\n\r\n        grasp() {\r\n            element.style.willChange = 'transform';\r\n            element.style.zIndex = 999;\r\n            // element.style.pointerEvents = 'none';\r\n            element.style.position = 'relative';\r\n            element.style.transition = transitions.grasp;\r\n            element.classList.add(props.dragClassName);\r\n            props.raised && element.classList.add('shadow');\r\n        },\r\n\r\n        async moveIntoPlace(x, y) {\r\n            if (currentPosition === startPosition)\r\n                return Promise.resolve();\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            element.style.transition = transitions.moveIntoPlace;\r\n            element.style.transform = `translate(0px,${y - element.offsetTop}px)`;\r\n            await event;\r\n            return event;\r\n        },\r\n\r\n        async settleIntoPlace() {\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            element.classList.remove(props.dragClassName);\r\n            element.classList.remove('shadow');\r\n            element.style.transition = transitions.settleIntoPlace;\r\n            await event;\r\n        },\r\n\r\n        async release(x, y) {\r\n            await this.moveIntoPlace(x, y);\r\n            await this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n        }\r\n    }\r\n}\r\n","import Draggable from './Draggable';\r\n\r\nexport default function (container, props) {\r\n\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    let elements;\r\n    let elementCacheAsSet;\r\n    let elementCacheAsArr;\r\n\r\n    function populateElementCache() {\r\n\r\n        elementCacheAsArr = [];\r\n\r\n        const count = elements.length;\r\n        for (let i = 0; i < count; i++) {\r\n            const element = elements[i];\r\n            elementCacheAsArr.push({ element, top: element.offsetTop, height: element.offsetHeight, translateY: 0 });\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n\r\n        grasp(e) {\r\n\r\n            if (e.target === container) return;\r\n\r\n            draggable = new Draggable(e.target, props);\r\n            draggable.grasp(draggable);\r\n\r\n            // [...container.children], container.children.slice(), Array.from\r\n            // do not work in ms edge.\r\n            elements = Array.prototype.slice.call(container.children);\r\n\r\n            draggableIndex = elements.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elements.splice(draggableIndex, 1);\r\n\r\n            populateElementCache();\r\n            console.table(elementCacheAsArr);\r\n\r\n        },\r\n\r\n        move(e) {\r\n            if (!draggable) return;\r\n            draggable.position = [e.touches[0].clientX, e.touches[0].clientY];\r\n            requestAnimationFrame(this.handleMove);\r\n        },\r\n\r\n        handleMove(e) {\r\n\r\n            // scrollIfRequired();\r\n\r\n            const { direction, dimensions: { height } } = draggable;\r\n\r\n            if (direction === 'down') {\r\n                for (placeholderIndex; placeholderIndex < elements.length; placeholderIndex++) {\r\n                    const element = elementCacheAsArr[placeholderIndex];\r\n                    if (element.top > draggable.currentCenter[1]) break;\r\n                    element.top -= height;\r\n                    element.translateY -= height;\r\n                    console.log(element.translateY, elements[placeholderIndex].style.transform)\r\n                    translate(element);\r\n                }\r\n            }\r\n            else if (direction === 'up') {\r\n                for (placeholderIndex; placeholderIndex > 0; placeholderIndex--) {\r\n                    const element = elementCacheAsArr[placeholderIndex - 1];\r\n                    const bottom = element.top + element.height;\r\n                    if (bottom < draggable.currentCenter[1]) break;\r\n                    element.top += height;\r\n                    element.translateY += height;\r\n                    translate(element);\r\n                }\r\n            }\r\n\r\n            function translate({ element, translateY = 0 }) {\r\n                element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${translateY}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        async release(e) {\r\n\r\n            console.table(elementCacheAsArr);\r\n            if (!draggable) return { oldIndex: null, newIndex: null };\r\n\r\n            const oldIndex = draggableIndex;\r\n            const newIndex = placeholderIndex;\r\n\r\n            await draggable.release(0, container.children[placeholderIndex].offsetTop);\r\n\r\n            elements.forEach(element => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n\r\n            return { oldIndex, newIndex }\r\n        }\r\n    }\r\n\r\n    function scrollIfRequired() {\r\n\r\n        let scrollContainer = draggable.element.parentNode;\r\n        while (scrollContainer) {\r\n            if (scrollContainer === document.body) break;\r\n            if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n            scrollContainer = scrollContainer.parentNode;\r\n        }\r\n        scrollContainer = scrollContainer || document.body;\r\n\r\n        const triggerOffset = 40;\r\n        let offset = 0;\r\n\r\n        const scrollable = scrollContainer;\r\n        const containerRect = scrollable.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(containerRect.top, 0);\r\n        const maxScrollTop = container.scrollHeight - Math.min(scrollable.clientHeight, window.innerHeight);\r\n\r\n        if (bottomOffset < triggerOffset) {\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        }\r\n        else if (topOffset < triggerOffset) {\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n        }\r\n        // console.log(maxScrollTop, scrollable.scrollTop, offset);\r\n        const scrollAmount = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset));\r\n        console.log(scrollAmount, document.body.scrollTop);\r\n        scrollable.scrollTop = scrollAmount;\r\n        // console.log(scrollable, scrollable.scrollTop);\r\n        // window.scrollTop = scrollAmount;\r\n        // scrollable.scrollTop = scrollable.scrollTop + 10;\r\n        // document.documentElement.scrollTop = document.documentElement.scrollTop + scrollAmount;\r\n        // console.log(document.documentElement.scrollTop);\r\n    }\r\n\r\n    function getComputedTranslation(element) {\r\n        const transformMatrix = window.getComputedStyle(element).getPropertyValue('transform');\r\n        const [, , , , x, y] = transformMatrix.match(/-?\\d+/g) || [0, 0, 0, 0, 0, 0];\r\n        return [x, y]\r\n    }\r\n\r\n    function getTranslateY(element) {\r\n        return Number((element.style.transform.match(/-?\\d+/g) || [0])[0])\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    useEffect(() => {\r\n        handler = new Handler(containerRef.current, props);\r\n        return null;\r\n    });\r\n\r\n    const containerRef = useRef();\r\n\r\n    let handler;\r\n\r\n    function onTouchStart(e) {\r\n        e.stopPropagation();\r\n        handler.grasp(e);\r\n        props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n        e.stopPropagation();\r\n        handler.move(e);\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    async function onTouchEnd(e) {\r\n        e.stopPropagation();\r\n        const result = await handler.release(e);\r\n        props.onDrop && props.onDrop(result)\r\n    }\r\n\r\n    return <div\r\n        className='container'\r\n        ref={containerRef}\r\n        onTouchStart={onTouchStart}\r\n        onTouchMove={onTouchMove}\r\n        onTouchEnd={onTouchEnd}\r\n        onContextMenu={preventDefault}\r\n    >\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move, shuffle, reverse } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nconst actions = {\r\n    reverse: ({ items }) => ({ items: reverse(items) }),\r\n    shuffle: ({ items }) => ({ items: shuffle(items) }),\r\n    move: (oldIndex, newIndex) => ({ items }) => ({ items: move(items, oldIndex, newIndex) }),\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n    state = { items: generateItems(20) }\r\n\r\n    onDrop = ({ oldIndex, newIndex }) => this.setState(actions.move(oldIndex, newIndex))\r\n\r\n    render() {\r\n        return <div className='list'>\r\n            <Sortable dragClassName='drag-style' onDrop={this.onDrop}>\r\n                {this.state.items.map(item =>\r\n                    <div key={item} className='list-item'>{item}</div>)\r\n                }\r\n            </Sortable>\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}