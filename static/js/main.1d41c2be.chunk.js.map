{"version":3,"sources":["events.js","ElementCache.js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","elementCache","elements","i","length","element","push","top","offsetTop","height","offsetHeight","translateY","get","index","count","removeAt","splice","resetStyles","forEach","_ref","style","transition","transform","print","console","table","map","item","innerText","Handler","container","props","draggable","draggableIndex","placeholderIndex","rafId","isHolding","scrollable","parentNode","children","Array","from","ElementCache","grasp","oldIndex","newIndex","move","x","y","shift","_ref$translateY","concat","prevent","requestAnimationFrame","repeatUntilNextTouchMove","_getScrollValue","scrollableRect","getBoundingClientRect","targetRect","bottomOffset","Math","min","bottom","window","innerHeight","topOffset","max","maxScrollTop","scrollHeight","clientHeight","offset","scrollTop","getScrollValue","_getScrollValue2","Object","slicedToArray","scrollOffset","position","_draggable","direction","dimensions","_draggable$absoluteCe","absoluteCenter","centerY","cancelAnimationFrame","release","overflowY","undefined","clearTimeout","Sortable","_useState","useState","_useState2","handler","setHandler","_useState3","_useState4","started","setStarted","_useState5","_useState6","usingTouch","setUsingTouch","containerRef","useRef","start","target","current","result","onDrop","touches","clientX","clientY","Drag","onDrag","end","useEffect","events","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","react_default","a","createElement","assign","className","ref","onPointerDown","pointerType","onContextMenu","react_flip_move_es","typeName","defaultProps","raised","dragClassName","arr","removeFrom","arguments","insertAt","isNaN","Number","_arr","toConsumableArray","generateItems","keys","k","ReactDOM","render","items","setItems","_items","key","document","getElementById"],"mappings":"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","file":"static/js/main.1d41c2be.chunk.js","sourcesContent":["export function preventDefault(e) { e.preventDefault() }\r\nexport function stopPropagation(e) { e.stopPropagation() }\r\n\r\nexport function fireAndForget(target, eventName) {\r\n    return new Promise((resolve, reject) => {\r\n        const handler = ({ target }) => {\r\n            target.removeEventListener(eventName, handler, false);\r\n            resolve();\r\n        }\r\n        target.addEventListener(eventName, handler, false);\r\n    })\r\n}\r\n","export default function elementCache(elements) {\r\n\r\n    const elementCache = [];\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        elementCache.push({ element, top: element.offsetTop, height: element.offsetHeight, translateY: 0 });\r\n    }\r\n\r\n    return {\r\n\r\n        get: index => elementCache[index],\r\n\r\n        get count() { return elementCache.length },\r\n\r\n        removeAt(index) { elementCache.splice(index, 1) },\r\n\r\n        resetStyles() {\r\n            elementCache.forEach(({ element }) => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n        },\r\n\r\n        print() {\r\n            console.table(elementCache.map(element => {\r\n                const { element: { innerText: item }, top, translateY } = element;\r\n                return { item, top, translateY }\r\n            }));\r\n        }\r\n    }\r\n\r\n}","import Draggable from './Draggable';\r\nimport ElementCache from './ElementCache';\r\n\r\nexport default function (container, props) {\r\n\r\n    const scrollable = container.parentNode;\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    const children = Array.from(container.children);\r\n    let elementCache = new ElementCache(children);\r\n    let rafId;\r\n    let isHolding;\r\n\r\n    return {\r\n\r\n        grasp(element) {\r\n\r\n            return { oldIndex: 0, newIndex: 5 }\r\n            if (element === container || draggable) return;\r\n\r\n            draggable = new Draggable(element, props);\r\n\r\n            draggableIndex = children.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elementCache.removeAt(draggableIndex);\r\n\r\n            isHolding = setTimeout(() => {\r\n                isHolding = undefined;\r\n                disableScrolling();\r\n                draggable.grasp();\r\n            }, 300);\r\n\r\n        },\r\n\r\n        move(x, y) {\r\n\r\n            if (prevent()) return;\r\n\r\n            rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            // Allows auto scroll to continue when draggable is held in same place\r\n            function repeatUntilNextTouchMove() {\r\n\r\n                const [scrollTop, scrollOffset] = getScrollValue();\r\n                scrollable.scrollTop = scrollTop;\r\n                draggable.position = [x, y + scrollTop];\r\n\r\n                const { direction, dimensions: { height }, absoluteCenter: [, centerY] } = draggable;\r\n\r\n                if (direction === 'down') {\r\n                    for (placeholderIndex; placeholderIndex < elementCache.count; placeholderIndex++) {\r\n                        const element = elementCache.get(placeholderIndex);\r\n                        if (element.top > centerY) break;\r\n                        element.top -= height;\r\n                        element.translateY -= height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n                else if (direction === 'up') {\r\n                    for (placeholderIndex; placeholderIndex > 0; placeholderIndex--) {\r\n                        const element = elementCache.get(placeholderIndex - 1);\r\n                        const bottom = element.top + element.height;\r\n                        if (bottom < centerY) break;\r\n                        element.top += height;\r\n                        element.translateY += height;\r\n                        shift(element);\r\n                    }\r\n                }\r\n\r\n                if (placeholderIndex <= 0 || placeholderIndex >= elementCache.count || scrollOffset === 0)\r\n                    cancelAnimationFrame(rafId);\r\n                else\r\n                    rafId = requestAnimationFrame(repeatUntilNextTouchMove);\r\n\r\n            }\r\n\r\n            function shift({ element, translateY = 0 }) {\r\n                // element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${translateY}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        release(e) {\r\n\r\n            if (prevent()) return {};\r\n\r\n            enableScrolling();\r\n\r\n            try { return { oldIndex: draggableIndex, newIndex: placeholderIndex } }\r\n\r\n            finally {\r\n\r\n                let unequalHeightAdjustment = 0;\r\n                if (draggable.direction === 'down')\r\n                    unequalHeightAdjustment = children[placeholderIndex].offsetHeight - draggable.element.offsetHeight;\r\n\r\n                // draggable.release(0, children[placeholderIndex].offsetTop - scrollable.scrollTop + container.offsetTop + unequalHeightAdjustment);\r\n                // draggable.element.style.transition = null;\r\n                // draggable.element.style.transform = null;\r\n                elementCache.resetStyles();\r\n                draggable = undefined;\r\n\r\n            }\r\n        },\r\n    }\r\n\r\n    function disableScrolling() {\r\n        scrollable.style.overflowY = 'hidden';\r\n        // scrollable.style.touchAction = 'none';\r\n        // scrollable.addEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function enableScrolling() {\r\n        scrollable.style.overflowY = 'scroll';\r\n        // scrollable.style.touchAction = 'pan-y';\r\n        // scrollable.removeEventListener('touchmove', preventDefault);\r\n    }\r\n\r\n    function prevent() {\r\n\r\n        if (isHolding) {\r\n            clearTimeout(isHolding);\r\n            isHolding = undefined;\r\n            draggable = undefined;\r\n        }\r\n\r\n        if (!draggable) return true;\r\n\r\n        cancelAnimationFrame(rafId);\r\n\r\n        return false;\r\n    }\r\n\r\n    function getScrollValue() {\r\n\r\n        const triggerOffset = 80;\r\n        const speedMultiplier = 0.25;\r\n\r\n        const scrollableRect = scrollable.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(scrollableRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(scrollableRect.top, 0);\r\n        const maxScrollTop = scrollable.scrollHeight - Math.min(scrollable.clientHeight, window.innerHeight);\r\n\r\n        let offset = 0;\r\n        if (bottomOffset < triggerOffset)\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        else if (topOffset < triggerOffset)\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n\r\n        const top = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset * speedMultiplier));\r\n\r\n        return [top, offset];\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\nimport FlipMove from 'react-flip-move';\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    let [handler, setHandler] = useState();\r\n    let [started, setStarted] = useState(false);\r\n    let [usingTouch, setUsingTouch] = useState(true);\r\n\r\n    const containerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        setHandler(new Handler(containerRef.current, props));\r\n    }, [props.children]);\r\n\r\n    function onPointerDown(e) {\r\n        if (e.pointerType === 'touch')\r\n            setUsingTouch(true);\r\n        else\r\n            setUsingTouch(false);\r\n    }\r\n\r\n    function start(e) {\r\n        setStarted(true);\r\n        if (e.target === containerRef.current) return;\r\n        const result = handler.grasp(e.target);\r\n        props.onDrop && props.onDrop(result);\r\n        // props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function move(e) {\r\n        if (usingTouch)\r\n            handler.move(e.touches[0].clientX, e.touches[0].clientY);\r\n        else\r\n            handler.move(e.clientX, e.clientY);\r\n\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    function end() {\r\n        const result = handler.release();\r\n        setStarted(false);\r\n        props.onDrop && props.onDrop(result);\r\n    }\r\n\r\n    let events = {};\r\n\r\n    if (handler) {\r\n        if (usingTouch) events = {\r\n            onTouchStart: start,\r\n            onTouchMove: move,\r\n            onTouchEnd: end,\r\n        }\r\n        else events = {\r\n            onMouseDown: start,\r\n            onMouseMove: started ? move : null,\r\n            onMouseUp: end,\r\n        }\r\n    }\r\n\r\n    return <div style={{ overflowY: 'scroll' }}>\r\n        <div\r\n            className='container'\r\n            ref={containerRef}\r\n            onPointerDown={onPointerDown}\r\n            {...events}\r\n            onContextMenu={preventDefault}\r\n        >\r\n            <FlipMove typeName={null}>\r\n                {props.children}\r\n            </FlipMove>\r\n        </div>\r\n    </div >\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nexport default function App() {\r\n\r\n    let [items, setItems] = useState(generateItems(80));\r\n\r\n    const onDrop = ({ oldIndex, newIndex }) => {\r\n        setItems(_items => move(_items, oldIndex, newIndex));\r\n        setItems(_items => move(_items, 0, newIndex));\r\n        setItems(_items => move(_items, 0, newIndex));\r\n    }\r\n\r\n    return <div className='list'>\r\n        <Sortable dragClassName='drag-style' onDrop={onDrop}>\r\n            {items.map(item =>\r\n                <div key={item} className='list-item' style={{ height: item === 'Item 5' ? '70px' : item === 'Item 9' && '100px' }}>{item}</div>)\r\n            }\r\n        </Sortable>\r\n    </div>\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}