{"version":3,"sources":["events.js","Draggable.js","Handler.js","Sortable.js","array.js","App.js","index.js"],"names":["preventDefault","e","fireAndForget","target","eventName","Promise","resolve","reject","addEventListener","handler","_ref","removeEventListener","transitions","grasp","moveIntoPlace","settleIntoPlace","Draggable","element","props","startPosition","currentPosition","direction","displacement","dimensions","_window$getComputedSt","window","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","width","offsetWidth","Math","max","parseInt","height","offsetHeight","initialCenter","left","offsetLeft","top","offsetTop","absoluteCenter","_element$getBoundingC","getBoundingClientRect","position","_this$displacement","Object","slicedToArray","this","x","y","style","transform","concat","willChange","zIndex","transition","classList","add","dragClassName","raised","_moveIntoPlace","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","abrupt","stop","_x","_x2","apply","arguments","_settleIntoPlace","_callee2","_context2","remove","release","_release","_callee3","_context3","_x3","_x4","Handler","container","draggable","draggableIndex","placeholderIndex","elements","Array","prototype","slice","call","children","indexOf","splice","move","touches","clientX","clientY","requestAnimationFrame","handleMove","_draggable","i","length","translate","Number","match","getTranslateY","oldIndex","newIndex","forEach","Sortable","useEffect","containerRef","current","useRef","_onTouchEnd","result","stopPropagation","sent","onDrop","react_default","createElement","className","ref","onTouchStart","onGrasp","onTouchMove","Drag","onDrag","onTouchEnd","onContextMenu","defaultProps","generateItems","toConsumableArray","keys","map","k","actions","reverse","arr","items","shuffle","_ref2","random","sort","b","_ref3","removeFrom","undefined","insertAt","isNaN","_arr","item","App","state","_ref4","_this","setState","key","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8ac1be64.chunk.js","sourcesContent":["export const preventDefault = e => e.preventDefault();\r\n\r\nexport const fireAndForget = (target, eventName) => new Promise((resolve, reject) => {\r\n    const handler = ({ target }) => {\r\n        target.removeEventListener(eventName, handler, false);\r\n        resolve();\r\n    }\r\n    target.addEventListener(eventName, handler, false);\r\n})\r\n","import './Draggable.css';\r\nimport { fireAndForget } from './events';\r\n\r\nconst transitions = {\r\n    grasp: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out',\r\n    moveIntoPlace: 'transform .2s ease-in-out',\r\n    settleIntoPlace: 'box-shadow .2s ease-in-out, background-color .2s ease-in-out'\r\n}\r\n\r\nexport default function Draggable(element, props) {\r\n\r\n    let startPosition = null;\r\n    let currentPosition = null;\r\n    let direction = null;\r\n\r\n    return {\r\n\r\n        get element() { return element },\r\n\r\n        get direction() { return direction },\r\n\r\n        get displacement() {\r\n            return [\r\n                currentPosition[0] - startPosition[0],\r\n                currentPosition[1] - startPosition[1],\r\n            ]\r\n        },\r\n\r\n        get dimensions() {\r\n            const { marginTop, marginBottom, marginLeft, marginRight } = window.getComputedStyle(element);\r\n            return {\r\n                width: element.offsetWidth + Math.max(parseInt(marginLeft), parseInt(marginRight)),\r\n                height: element.offsetHeight + Math.max(parseInt(marginTop), parseInt(marginBottom)),\r\n            }\r\n        },\r\n\r\n        get initialCenter() {\r\n            const { offsetLeft: left, offsetTop: top, offsetHeight: height, offsetWidth: width } = element;\r\n            return [left + width / 2, top + height / 2];\r\n        },\r\n\r\n        get absoluteCenter() {\r\n            const { left, top, height, width } = element.getBoundingClientRect();\r\n            return [left + width / 2, top + height / 2];\r\n            // return [element.offsetLeft + this.dimensions.width / 2, element.offsetTop + this.dimensions.height / 2];\r\n        },\r\n\r\n        set position(position) {\r\n            if (currentPosition) {\r\n                if (position[1] < currentPosition[1])\r\n                    direction = 'up';\r\n                else\r\n                    direction = 'down';\r\n            }\r\n            currentPosition = position;\r\n            if (!startPosition)\r\n                startPosition = currentPosition;\r\n            const [x, y] = this.displacement;\r\n            element.style.transform = `translate(${x}px,${y}px)`;\r\n        },\r\n\r\n        grasp() {\r\n            element.style.willChange = 'transform';\r\n            element.style.zIndex = 999;\r\n            // element.style.pointerEvents = 'none';\r\n            element.style.position = 'relative';\r\n            element.style.transition = transitions.grasp;\r\n            element.classList.add(props.dragClassName);\r\n            props.raised && element.classList.add('shadow');\r\n        },\r\n\r\n        async moveIntoPlace(x, y) {\r\n            if (currentPosition === startPosition)\r\n                return Promise.resolve();\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            element.style.transition = transitions.moveIntoPlace;\r\n            element.style.transform = `translate(0px,${y - element.offsetTop}px)`;\r\n            await event;\r\n            return event;\r\n        },\r\n\r\n        async settleIntoPlace() {\r\n            const event = fireAndForget(element, \"transitionend\");\r\n            element.classList.remove(props.dragClassName);\r\n            element.classList.remove('shadow');\r\n            element.style.transition = transitions.settleIntoPlace;\r\n            await event;\r\n        },\r\n\r\n        async release(x, y) {\r\n            await this.moveIntoPlace(x, y);\r\n            await this.settleIntoPlace();\r\n            element.style.position = null;\r\n            // element.style.pointerEvents = null;\r\n            element.style.zIndex = null;\r\n            element.style.transition = null;\r\n            element.style.transform = null;\r\n        }\r\n    }\r\n}\r\n","import Draggable from './Draggable';\r\n\r\nexport default function (container, props) {\r\n\r\n    let draggable;\r\n    let draggableIndex;\r\n    let placeholderIndex;\r\n    let elements;\r\n\r\n    return {\r\n\r\n        grasp(e) {\r\n\r\n            if (e.target === container) return;\r\n\r\n            draggable = new Draggable(e.target, props);\r\n            draggable.grasp(draggable);\r\n\r\n            // [...container.children], container.children.slice(), Array.from\r\n            // do not work in ms edge.\r\n            elements = Array.prototype.slice.call(container.children);\r\n\r\n            draggableIndex = elements.indexOf(draggable.element);\r\n            placeholderIndex = draggableIndex;\r\n\r\n            elements.splice(draggableIndex, 1);\r\n\r\n        },\r\n\r\n        move(e) {\r\n            if (!draggable) return;\r\n            draggable.position = [e.touches[0].clientX, e.touches[0].clientY];\r\n            requestAnimationFrame(this.handleMove);\r\n        },\r\n\r\n        handleMove(e) {\r\n\r\n            // scrollIfRequired();\r\n\r\n            const { direction, dimensions: { height } } = draggable;\r\n\r\n            if (direction === 'down') {\r\n                for (let i = placeholderIndex; i < elements.length; i++) {\r\n                    const element = elements[i];\r\n                    const top = element.getBoundingClientRect().top;\r\n                    if (top > draggable.absoluteCenter[1]) break;\r\n                    translate(element, -height);\r\n                    placeholderIndex++;\r\n                }\r\n            }\r\n            else if (direction === 'up') {\r\n                for (let i = placeholderIndex - 1; i >= 0; i--) {\r\n                    const element = elements[i];\r\n                    const bottom = element.getBoundingClientRect().top + element.offsetHeight;\r\n                    if (bottom < draggable.absoluteCenter[1]) break;\r\n                    translate(element, height);\r\n                    placeholderIndex--;\r\n                }\r\n            }\r\n\r\n            function translate(element, y) {\r\n                element.style.willChange = 'transform';\r\n                element.style['transition'] = 'transform .2s ease-in-out';\r\n                element.style['transform'] = `translateY(${y + getTranslateY(element)}px)`;\r\n            }\r\n\r\n        },\r\n\r\n        async release(e) {\r\n\r\n            if (!draggable) return { oldIndex: null, newIndex: null };\r\n\r\n            const oldIndex = draggableIndex;\r\n            const newIndex = placeholderIndex;\r\n\r\n            await draggable.release(0, container.children[placeholderIndex].offsetTop);\r\n\r\n            elements.forEach(element => {\r\n                element.style.transition = null;\r\n                element.style.transform = null;\r\n            });\r\n\r\n            return { oldIndex, newIndex }\r\n        }\r\n    }\r\n\r\n    function scrollIfRequired() {\r\n\r\n        let scrollContainer = draggable.element.parentNode;\r\n        while (scrollContainer) {\r\n            if (scrollContainer === document.body) break;\r\n            if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n            scrollContainer = scrollContainer.parentNode;\r\n        }\r\n        scrollContainer = scrollContainer || document.body;\r\n\r\n        const triggerOffset = 40;\r\n        let offset = 0;\r\n\r\n        const scrollable = scrollContainer;\r\n        const containerRect = scrollable.getBoundingClientRect();\r\n        const targetRect = draggable.element.getBoundingClientRect();\r\n        const bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom;\r\n        const topOffset = targetRect.top - Math.max(containerRect.top, 0);\r\n        const maxScrollTop = container.scrollHeight - Math.min(scrollable.clientHeight, window.innerHeight);\r\n\r\n        if (bottomOffset < triggerOffset) {\r\n            offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n        }\r\n        else if (topOffset < triggerOffset) {\r\n            offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n        }\r\n        // console.log(maxScrollTop, scrollable.scrollTop, offset);\r\n        const scrollAmount = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset));\r\n        console.log(scrollAmount, document.body.scrollTop);\r\n        scrollable.scrollTop = scrollAmount;\r\n        // console.log(scrollable, scrollable.scrollTop);\r\n        // window.scrollTop = scrollAmount;\r\n        // scrollable.scrollTop = scrollable.scrollTop + 10;\r\n        // document.documentElement.scrollTop = document.documentElement.scrollTop + scrollAmount;\r\n        // console.log(document.documentElement.scrollTop);\r\n    }\r\n\r\n    function getComputedTranslation(element) {\r\n        const transformMatrix = window.getComputedStyle(element).getPropertyValue('transform');\r\n        const [, , , , x, y] = transformMatrix.match(/-?\\d+/g) || [0, 0, 0, 0, 0, 0];\r\n        return [x, y]\r\n    }\r\n\r\n    function getTranslateY(element) {\r\n        return Number((element.style.transform.match(/-?\\d+/g) || [0])[0])\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Handler from './Handler';\r\nimport { preventDefault } from './events';\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexport default function Sortable(props) {\r\n\r\n    useEffect(() => {\r\n        handler = new Handler(containerRef.current, props);\r\n        return null;\r\n    });\r\n\r\n    const containerRef = useRef();\r\n\r\n    let handler;\r\n\r\n    function onTouchStart(e) {\r\n        e.stopPropagation();\r\n        handler.grasp(e);\r\n        props.onGrasp && props.onGrasp();\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n        e.stopPropagation();\r\n        handler.move(e);\r\n        props.Drag && props.onDrag();\r\n    }\r\n\r\n    async function onTouchEnd(e) {\r\n        e.stopPropagation();\r\n        const result = await handler.release(e);\r\n        props.onDrop && props.onDrop(result)\r\n    }\r\n\r\n    return <div\r\n        className='container'\r\n        ref={containerRef}\r\n        onTouchStart={onTouchStart}\r\n        onTouchMove={onTouchMove}\r\n        onTouchEnd={onTouchEnd}\r\n        onContextMenu={preventDefault}\r\n    >\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nSortable.propTypes = {\r\n    onGrasp: PropTypes.func,\r\n    onDrag: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    raised: PropTypes.bool,\r\n    dragClassName: PropTypes.string,\r\n}\r\n\r\nSortable.defaultProps = {\r\n    raised: true,\r\n    dragClassName: 'drag-style',\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null;\r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n\r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Sortable from './Sortable';\r\nimport { move, shuffle, reverse } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nconst actions = {\r\n    reverse: ({ items }) => ({ items: reverse(items) }),\r\n    shuffle: ({ items }) => ({ items: shuffle(items) }),\r\n    move: (oldIndex, newIndex) => ({ items }) => ({ items: move(items, oldIndex, newIndex) }),\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n    state = { items: generateItems(20) }\r\n\r\n    onDrop = ({ oldIndex, newIndex }) => this.setState(actions.move(oldIndex, newIndex))\r\n\r\n    render() {\r\n        return <div className='list'>\r\n            <Sortable dragClassName='drag-style' onDrop={this.onDrop}>\r\n                {this.state.items.map(item =>\r\n                    <div key={item} className='list-item'>{item}</div>)\r\n                }\r\n            </Sortable>\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}